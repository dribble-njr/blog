import{_ as o,c,a,e,d as s,b as t,w as d,r as l,o as u}from"./app-HGC3Yy25.js";const r="/blog/assets/image/frontend/tool/vite/001/esm-problem.png",v="/blog/assets/image/frontend/tool/vite/001/esm-vite.png",k="/blog/assets/image/frontend/tool/vite/001/bundle.png",m="/blog/assets/image/frontend/tool/vite/001/vite.png",g={},b={href:"https://github.com/Stephen-wzw/vite-demo",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/evanw/esbuild",target:"_blank",rel:"noopener noreferrer"};function f(x,n){const i=l("ExternalLinkIcon"),p=l("RouteLink");return u(),c("div",null,[a("blockquote",null,[a("p",null,[a("a",b,[n[0]||(n[0]=s("项目地址")),t(i)])])]),n[9]||(n[9]=e(`<p>通过前面对 webpack 的学习，我们已经看到了它的强大，为什么还需要学习 Vite 呢？</p><p>Vite 官方文档中提到，当我们开始构建越来越大型的应用时，需要处理的 JavaScript 代码量也呈指数级增长。包含数千个模块的大型项目相当普遍。我们开始遇到性能瓶颈 —— 使用 JavaScript 开发的工具通常需要很长时间（甚至是几分钟！）才能启动开发服务器，即使使用 HMR，文件修改后的效果也需要几秒钟才能在浏览器中反映出来。如此循环往复，迟钝的反馈会极大地影响开发者的开发效率和幸福感。</p><p>事实也确实如此，webpack 虽好，但是每次重新打包或者热更新都需要比较长的时间，同时还需要繁琐的配置，每次使用 loader 或者 plugin 都需要写上配置文件。</p><p>Vite 给我们提供了开箱即用的配置，同时它也具有高度的可扩展性，并有完整的类型支持。它主要由两部分组成：</p><ul><li>一个开发服务器，它基于<strong>原生 ES 模块</strong>提供了丰富的内建功能，如速度快到惊人的模块热更新（HMR）。</li><li>一套构建指令，它使用 Rollup 打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。</li></ul><h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始"><span>开始</span></a></h2><p>新建项目，初始化 npm，然后本地安装 <code>vite</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> vite-demo
<span class="token builtin class-name">cd</span> vite-demo
<span class="token function">npm</span> init <span class="token parameter variable">-y</span>
<span class="token function">npm</span> <span class="token function">install</span> vite <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建以下目录及文件：</p><p><strong>project</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> vite-demo
</span><span class="token prefix unchanged"> </span><span class="token line"> |- package.json
</span><span class="token prefix unchanged"> </span><span class="token line"> |- package-lock.json
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> |- index.html
</span><span class="token prefix inserted">+</span><span class="token line"> |- /src
</span><span class="token prefix inserted">+</span><span class="token line">   |- /js
</span><span class="token prefix inserted">+</span><span class="token line">     |- math.js
</span><span class="token prefix inserted">+</span><span class="token line">   |- index.js
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>src/js/math.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span> num2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>src/index.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> sum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./js/math.js&quot;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Vite!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>index.html</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>vite-demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./src/index.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在用 <code>live server</code> 打开 <code>index.html</code> 文件，即可看到浏览器显示正确的内容：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Hello Vite<span class="token operator">!</span>
<span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>但其实我们现在并没有使用 Vite 帮我们打包项目，它起作用的原因在于浏览器本身就支持<strong>原生 ES 模块</strong>。既然这样，我们直接写 ES Module 的代码就行，为什么还需要使用到 Vite 呢？接下来看看直接使用 ES Module 的问题所在。</p><h2 id="原生-es-模块的问题" tabindex="-1"><a class="header-anchor" href="#原生-es-模块的问题"><span>原生 ES 模块的问题</span></a></h2><p>为了体现原生 ES 模块的问题，安装 <code>lodash-es</code> 库，它是使用 ES Module 导出的。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> lodash-es
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来在 <code>src/index.js</code> 中使用：</p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import _ from &quot;lodash-es&quot;;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> import { sum } from &quot;./js/math.js&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(&quot;Hello Vite!&quot;);
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(sum(10, 20));
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> console.log(_.join([&quot;hello&quot;, &quot;vite&quot;], &quot;-&quot;));
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时打开 <code>index.html</code> 会报错：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Uncaught TypeError: Failed to resolve module specifier <span class="token string">&quot;lodash-es&quot;</span><span class="token builtin class-name">.</span> Relative references must start with either <span class="token string">&quot;/&quot;</span>, <span class="token string">&quot;./&quot;</span>, or <span class="token string">&quot;../&quot;</span><span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,27)),a("p",null,[n[2]||(n[2]=s("之前在 webpack 中可以直接这样导入模块的原因是它内部帮我们做了")),t(p,{to:"/frontend/engineering/build-tool/webpack/008-webpack-resolve.html"},{default:d(()=>n[1]||(n[1]=[s("模块解析")])),_:1,__:[1]}),n[3]||(n[3]=s("。其实 Vite 也帮我们做了这样的事，但是为了体现")),n[4]||(n[4]=a("strong",null,"原生 ES Module",-1)),n[5]||(n[5]=s("存在的问题，使用相对路径对其进行导入。"))]),n[10]||(n[10]=e(`<div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> import _ from &quot;lodash-es&quot;;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import _ from &quot;../node_modules/lodash-es/lodash.default.js&quot;;
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>重新打开浏览器正常工作：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Hello Vite<span class="token operator">!</span>
<span class="token number">30</span>
hello-vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是，我们查看网络，可以看到浏览器将整个库都请求下来了，如果每个库都这样，那请求的资源将不可想象。</p><figure><img src="`+r+`" alt="原生问题" tabindex="0" loading="lazy"><figcaption>原生问题</figcaption></figure><p>现在我们更改下模块路径，并使用 <code>vite</code> 启动服务：</p><p><strong>src/index.js</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> import _ from &quot;../node_modules/lodash-es/lodash.default.js&quot;;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import _ from &quot;lodash-es&quot;;
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>npx vite

vite v2.9.9 dev server running at:

<span class="token operator">&gt;</span> Local: http://localhost:3000/
<span class="token operator">&gt;</span> Network: use <span class="token variable"><span class="token variable">\`</span><span class="token parameter variable">--host</span><span class="token variable">\`</span></span> to expose

ready <span class="token keyword">in</span> 547ms.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用浏览器打开并查看网络，请求数极大减少，这是由于 Vite 帮我们在内部做了处理。</p><figure><img src="`+v+`" alt="vite" tabindex="0" loading="lazy"><figcaption>vite</figcaption></figure><h2 id="css" tabindex="-1"><a class="header-anchor" href="#css"><span>css</span></a></h2><h3 id="普通-css" tabindex="-1"><a class="header-anchor" href="#普通-css"><span>普通 css</span></a></h3><p>导入 .css 文件将会把内容插入到 <code>&lt;style&gt;</code> 标签中，同时也带有 HMR 支持。</p><p>在 src 下新建 css 文件夹，并新增 <code>style.css</code> 文件：</p><p><strong>src/css/style.css</strong></p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">body</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>src/index.js</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import _ from &quot;lodash-es&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> import { sum } from &quot;./js/math.js&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line">
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import &quot;./css/style.css&quot;;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(&quot;Hello Vite!&quot;);
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(sum(10, 20));
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(_.join([&quot;hello&quot;, &quot;vite&quot;], &quot;-&quot;));
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开浏览器可以看到 <code>.css</code> 样式生效。</p><h3 id="预处理器" tabindex="-1"><a class="header-anchor" href="#预处理器"><span>预处理器</span></a></h3><p>Vite 也同时提供了对 .scss, .sass, .less, .styl 和 .stylus 文件的内置支持。没有必要为它们安装特定的 Vite 插件，但必须安装相应的预处理器依赖：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># .scss and .sass</span>
<span class="token function">npm</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> sass

<span class="token comment"># .less</span>
<span class="token function">npm</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> <span class="token function">less</span>

<span class="token comment"># .styl and .stylus</span>
<span class="token function">npm</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> stylus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以 less 为例，在 src/css 文件夹下新建 <code>title.less</code> 文件：</p><p><strong>title.less</strong></p><div class="language-less line-numbers-mode" data-ext="less" data-title="less"><pre class="language-less"><code><span class="token variable">@fontSize<span class="token punctuation">:</span></span> 50px<span class="token punctuation">;</span>
<span class="token variable">@fontColor<span class="token punctuation">:</span></span> #999<span class="token punctuation">;</span>

<span class="token selector">.title</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">@fontSize</span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@fontColor</span><span class="token punctuation">;</span>
  
  <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>src/index.js</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import _ from &quot;lodash-es&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> import { sum } from &quot;./js/math.js&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line">
</span><span class="token prefix unchanged"> </span><span class="token line"> import &quot;./css/style.css&quot;;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import &quot;./css/title.less&quot;;
</span></span>
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> console.log(&quot;Hello Vite!&quot;);
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(sum(10, 20));
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(_.join([&quot;hello&quot;, &quot;vite&quot;], &quot;-&quot;));
</span></span>
<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const titleEl = document.createElement(&#39;div&#39;);
</span><span class="token prefix inserted">+</span><span class="token line"> titleEl.className = &quot;title&quot;;
</span><span class="token prefix inserted">+</span><span class="token line"> titleEl.innerHTML = &quot;Hello Vite&quot;;
</span></span>
<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> document.body.appendChild(titleEl);
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开浏览器可以看到 <code>.less</code> 样式生效。</p><h3 id="postcss" tabindex="-1"><a class="header-anchor" href="#postcss"><span>postcss</span></a></h3><p>如果项目包含有效的 PostCSS 配置 (任何受 postcss-load-config 支持的格式，例如 <code>postcss.config.js</code>)，它将会自动应用于所有已导入的 CSS。</p><p>首先安装 postcss 和 postcss-preset-env：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> postcss postcss-preset-env <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在项目根目录下新建 <code>postcss.config.js</code>：</p><p><strong>postcss.config.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;postcss-preset-env&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时候打开浏览器查看元素，可以发现已经帮助我们加上了前缀：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.title</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #999<span class="token punctuation">;</span>
  <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
     <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
      <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
          <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="图片" tabindex="-1"><a class="header-anchor" href="#图片"><span>图片</span></a></h2><p>在 src 下新建 img 文件夹，并修改 <code>index.js</code> 文件：</p><p><strong>index.js</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import _ from &quot;lodash-es&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> import { sum } from &quot;./js/math.js&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> import &quot;./css/style.css&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> import &quot;./css/title.less&quot;;
</span></span>
<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import avatarUrl from &quot;./img/avatar.png&quot;;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(&quot;Hello Vite!&quot;);
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(sum(10, 20));
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(_.join([&quot;hello&quot;, &quot;vite&quot;], &quot;-&quot;));
</span><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> const titleEl = document.createElement(&#39;div&#39;);
</span><span class="token prefix unchanged"> </span><span class="token line"> titleEl.className = &quot;title&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> titleEl.innerHTML = &quot;Hello Vite&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> 
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const imgEl = document.createElement(&#39;img&#39;);
</span><span class="token prefix inserted">+</span><span class="token line"> imgEl.src = avatarUrl;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> document.body.appendChild(titleEl);
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> document.body.appendChild(imgEl);
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不用其他配置，浏览器就已经显示出了图片。</p><h2 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript"><span>TypeScript</span></a></h2>`,44)),a("p",null,[n[7]||(n[7]=s("Vite 使用 ")),a("a",h,[n[6]||(n[6]=s("esbuild")),t(i)]),n[8]||(n[8]=s(" 将 TypeScript 转译到 JavaScript，约是 tsc 速度的 20~30 倍，同时 HMR 更新反映到浏览器的时间小于 50ms。"))]),n[11]||(n[11]=e(`<p>src 下新建 ts 文件夹，并新增 <code>mul.ts</code> 文件，在 <code>index.js</code> 下使用：</p><p><strong>src/ts/mul.ts</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span><span class="token punctuation">(</span>num1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> num2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num1 <span class="token operator">*</span> num2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>src/index.js</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import _ from &quot;lodash-es&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> import { sum } from &quot;./js/math.js&quot;;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import mul from &quot;./ts/mul.ts&quot;;
</span></span>
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import &quot;./css/style.css&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> import &quot;./css/title.less&quot;;
</span></span>
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import avatarUrl from &quot;./img/avatar.png&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(&quot;Hello Vite!&quot;);
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(sum(10, 20));
</span><span class="token prefix unchanged"> </span><span class="token line"> console.log(_.join([&quot;hello&quot;, &quot;vite&quot;], &quot;-&quot;));
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> console.log(mul(10, 20));
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> const titleEl = document.createElement(&#39;div&#39;);
</span><span class="token prefix unchanged"> </span><span class="token line"> titleEl.className = &quot;title&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> titleEl.innerHTML = &quot;Hello Vite&quot;;
</span><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> const imgEl = document.createElement(&#39;img&#39;);
</span><span class="token prefix unchanged"> </span><span class="token line"> imgEl.src = avatarUrl;
</span><span class="token prefix unchanged"> </span><span class="token line"> 
</span><span class="token prefix unchanged"> </span><span class="token line"> document.body.appendChild(titleEl);
</span><span class="token prefix unchanged"> </span><span class="token line"> document.body.appendChild(imgEl);
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>浏览器正确的打印了 <code>200</code>。</p><h2 id="vue" tabindex="-1"><a class="header-anchor" href="#vue"><span>Vue</span></a></h2><p>Vite 为 Vue 提供第一优先级支持：</p><ul><li>Vue 3 单文件组件支持：@vitejs/plugin-vue</li><li>Vue 3 JSX 支持：@vitejs/plugin-vue-jsx</li><li>Vue 2 支持：underfin/vite-plugin-vue2</li></ul><p>首先安装 vue@next 和 @vitejs/plugin-vue：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> vue@next @vitejs/plugin-vue <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来对项目文件进行修改：</p><p><strong>index.html</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">&lt;!DOCTYPE html&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">&lt;html lang=&quot;en&quot;&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">&lt;head&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">  &lt;meta charset=&quot;UTF-8&quot;&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">  &lt;title&gt;vite-demo&lt;/title&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">&lt;/head&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">&lt;body&gt;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  &lt;script src=&quot;./src/index.js&quot; type=&quot;module&quot;&gt;&lt;/script&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">&lt;/body&gt;
</span></span><span class="token deleted-arrow deleted"><span class="token prefix deleted">&lt;</span><span class="token line">/html&gt;
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>src/vue/App.vue</strong></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>{{message}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Hello Vue&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>src/index.js</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import { createApp } from &quot;vue&quot;;
</span><span class="token prefix inserted">+</span><span class="token line"> import App from &#39;./vue/App.vue&#39;;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">
</span><span class="token prefix unchanged"> </span><span class="token line"> ...
</span><span class="token prefix unchanged"> </span><span class="token line">
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> createApp(App).mount(&#39;#app&#39;);
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建 <code>vite.config.js</code> 使用 @vitejs/plugin-vue 来处理 .vue 文件：</p><p><strong>vite.config.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> vue <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vitejs/plugin-vue&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="npm-script" tabindex="-1"><a class="header-anchor" href="#npm-script"><span>npm script</span></a></h2><p><strong>package.json</strong></p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &quot;scripts&quot;: {
</span><span class="token prefix unchanged"> </span><span class="token line">   &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;,
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   &quot;serve&quot;: &quot;vite&quot;,
</span><span class="token prefix inserted">+</span><span class="token line">   &quot;build&quot;: &quot;vite build&quot;,
</span><span class="token prefix inserted">+</span><span class="token line">   &quot;preview&quot;: &quot;vite preview&quot;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> },
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>vite</code>：启动服务。</li><li><code>vite build</code>：给项目进行打包。</li><li><code>vite preview</code>：打包后进行预览。</li></ul><blockquote><p>在进行 <code>npm run build</code> 打包后使用 <code>live server</code> 打开后页面显示空白，浏览器报错。需要在 <code>vite.config.js</code> 下配置 <code>base: &#39;./&#39;</code>。</p></blockquote><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过上面的体验，可以发现 Vite 是真的很快，而且不需要像 webpack 那样大量的配置。</p><p>以前的打包模式，项目启动时，需要先将所有文件打包成一个文件 bundle.js ，然后在 html 引入，这个 多文件 -&gt; bundle.js 的过程是非常耗时间的。</p><figure><img src="`+k+'" alt="bundle" tabindex="0" loading="lazy"><figcaption>bundle</figcaption></figure><p>而 Vite 以原生 ESM 方式提供源码，Vite 只需要在浏览器请求源码时进行转换并按需提供源码。根据情景动态导入代码，即只在当前屏幕上实际使用时才会被处理。</p><figure><img src="'+m+'" alt="vite" tabindex="0" loading="lazy"><figcaption>vite</figcaption></figure>',32))])}const y=o(g,[["render",f],["__file","001-hello-vite.html.vue"]]),j=JSON.parse('{"path":"/frontend/engineering/build-tool/vite/001-hello-vite.html","title":"Vite 初体验","lang":"zh-CN","frontmatter":{"title":"Vite 初体验","date":"2022-05-18T00:00:00.000Z","category":["工程化"],"tag":["项目打包","Vite"],"description":" 项目地址 通过前面对 webpack 的学习，我们已经看到了它的强大，为什么还需要学习 Vite 呢？ Vite 官方文档中提到，当我们开始构建越来越大型的应用时，需要处理的 JavaScript 代码量也呈指数级增长。包含数千个模块的大型项目相当普遍。我们开始遇到性能瓶颈 —— 使用 JavaScript 开发的工具通常需要很长时间（甚至是几分钟！...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/engineering/build-tool/vite/001-hello-vite.html"}],["meta",{"property":"og:title","content":"Vite 初体验"}],["meta",{"property":"og:description","content":" 项目地址 通过前面对 webpack 的学习，我们已经看到了它的强大，为什么还需要学习 Vite 呢？ Vite 官方文档中提到，当我们开始构建越来越大型的应用时，需要处理的 JavaScript 代码量也呈指数级增长。包含数千个模块的大型项目相当普遍。我们开始遇到性能瓶颈 —— 使用 JavaScript 开发的工具通常需要很长时间（甚至是几分钟！..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://dribble-njr.github.io/blog/blog/assets/image/frontend/tool/vite/001/esm-problem.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Vite 初体验"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"项目打包"}],["meta",{"property":"article:tag","content":"Vite"}],["meta",{"property":"article:published_time","content":"2022-05-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vite 初体验\\",\\"image\\":[\\"https://dribble-njr.github.io/blog/blog/assets/image/frontend/tool/vite/001/esm-problem.png\\",\\"https://dribble-njr.github.io/blog/blog/assets/image/frontend/tool/vite/001/esm-vite.png\\",\\"https://dribble-njr.github.io/blog/blog/assets/image/frontend/tool/vite/001/bundle.png\\",\\"https://dribble-njr.github.io/blog/blog/assets/image/frontend/tool/vite/001/vite.png\\"],\\"datePublished\\":\\"2022-05-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 开始","slug":"开始","link":"#开始","children":[]},{"level":2,"title":"2 原生 ES 模块的问题","slug":"原生-es-模块的问题","link":"#原生-es-模块的问题","children":[]},{"level":2,"title":"3 css","slug":"css","link":"#css","children":[{"level":3,"title":"3.1 普通 css","slug":"普通-css","link":"#普通-css","children":[]},{"level":3,"title":"3.2 预处理器","slug":"预处理器","link":"#预处理器","children":[]},{"level":3,"title":"3.3 postcss","slug":"postcss","link":"#postcss","children":[]}]},{"level":2,"title":"4 图片","slug":"图片","link":"#图片","children":[]},{"level":2,"title":"5 TypeScript","slug":"typescript","link":"#typescript","children":[]},{"level":2,"title":"6 Vue","slug":"vue","link":"#vue","children":[]},{"level":2,"title":"7 npm script","slug":"npm-script","link":"#npm-script","children":[]},{"level":2,"title":"8 总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1704616104000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":2}]},"readingTime":{"minutes":6.56,"words":1967},"filePathRelative":"frontend/engineering/build-tool/vite/001-hello-vite.md","localizedDate":"2022年5月18日","excerpt":"","autoDesc":true}');export{y as comp,j as data};
