import{_ as e,c as n,e as a,o}from"./app-DjBUyNfp.js";const s={};function c(r,t){return o(),n("div",null,t[0]||(t[0]=[a(`<p>首先，三者都是 JavaScript 声明变量的方式。区别在于：</p><table><thead><tr><th></th><th>var</th><th>let</th><th>const</th></tr></thead><tbody><tr><td><strong>作用域</strong></td><td>全局作用域和函数作用域</td><td>块级作用域</td><td>块级作用域</td></tr><tr><td><strong>变量提升</strong></td><td>自动提升到作用域顶部</td><td>提升，暂时性死区</td><td>提升，暂时性死区</td></tr><tr><td><strong>冗余声明</strong></td><td>允许冗余声明</td><td>不允许</td><td>不允许</td></tr><tr><td><strong>赋值</strong></td><td>可以重新赋值，且不需初始化</td><td>可以重新赋值，且不需初始化</td><td>不可以重新赋值，必须初始化</td></tr><tr><td><strong>全局声明</strong></td><td>成为 <code>window</code> 对象的属性</td><td>不会</td><td>不会</td></tr></tbody></table><p>关于变量提升，<code>var</code>、<code>let</code>、<code>const</code> 三者 <strong>都存在变量提升</strong>，但是区别在于 <code>let</code>、<code>const</code> 存在暂时性死区。</p><p>来看一个例子：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> x <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>x<span class="token punctuation">)</span>

<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> y <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>y<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时第一个会打印 <code>undefined</code>，第二个会报错。这是由于 <code>var</code> 有变量提升，而 <code>let</code> 存在暂时性死区。</p><div class="hint-container tip"><p class="hint-container-title">暂时性死区</p><p><code>let</code>、<code>const</code> 在声明变量之前，不能以任何方式使用该变量。在 <code>let</code>、<code>const</code> 声明之前的执行瞬间被称为「暂时性死区」。</p><p>在此阶段引用任何后面才声明的变量都会抛出错误。</p></div><div class="hint-container tip"><p class="hint-container-title">总结</p><p>总之，使用 <code>let</code> 或 <code>const</code> 即可。</p></div>`,8)]))}const p=e(s,[["render",c],["__file","001-var-let-const.html.vue"]]),i=JSON.parse('{"path":"/frontend/basic/javascript/001-var-let-const.html","title":"var、let、const 区别","lang":"zh-CN","frontmatter":{"title":"var、let、const 区别","date":"2022-05-02T00:00:00.000Z","icon":"vs","category":["JavaScript"],"tag":["language basic"],"description":"首先，三者都是 JavaScript 声明变量的方式。区别在于： 关于变量提升，var、let、const 三者 都存在变量提升，但是区别在于 let、const 存在暂时性死区。 来看一个例子： 此时第一个会打印 undefined，第二个会报错。这是由于 var 有变量提升，而 let 存在暂时性死区。 暂时性死区 let、const 在声明变量之...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/basic/javascript/001-var-let-const.html"}],["meta",{"property":"og:title","content":"var、let、const 区别"}],["meta",{"property":"og:description","content":"首先，三者都是 JavaScript 声明变量的方式。区别在于： 关于变量提升，var、let、const 三者 都存在变量提升，但是区别在于 let、const 存在暂时性死区。 来看一个例子： 此时第一个会打印 undefined，第二个会报错。这是由于 var 有变量提升，而 let 存在暂时性死区。 暂时性死区 let、const 在声明变量之..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"language basic"}],["meta",{"property":"article:published_time","content":"2022-05-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"var、let、const 区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[],"git":{"createdTime":1712741001000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":4}]},"readingTime":{"minutes":1.09,"words":327},"filePathRelative":"frontend/basic/javascript/001-var-let-const.md","localizedDate":"2022年5月2日","excerpt":"","autoDesc":true}');export{p as comp,i as data};
