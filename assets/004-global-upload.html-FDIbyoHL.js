import{_ as e,c as o,e as a,a as s,d as t,b as c,w as l,r as i,o as u}from"./app-HGC3Yy25.js";const r={},k={class:"hint-container info"};function d(v,n){const p=i("RouteLink");return u(),o("div",null,[n[3]||(n[3]=a(`<p>上传需要涉及到各个页面，因此需要实现一个全局上传组件，同时支持拖拽上传。</p><p>根据产品 PRD，整理出如下几个重点部分：</p><ol><li>管理全局的上传任务状态</li><li>文件上传需要绑定每次上传任务的回调</li><li>拖拽内容区域上传</li><li>上传文件时进度以文件夹为单位进行展示</li></ol><h2 id="管理全局的上传任务状态" tabindex="-1"><a class="header-anchor" href="#管理全局的上传任务状态"><span>管理全局的上传任务状态</span></a></h2><p>第一个问题可以使用 Context 或着 Redux 解决，在这里由于没有涉及到其他更复杂的状态管理，因此使用更轻量的 Context。</p><p>每当添加上传任务，都可以通过 Context 提供的方法更新状态，同时所有引用了此状态的组件（如全局上传抽屉）都会被重新渲染以显示最新的状态。</p><p>在切换页面时需要保留全局上传组件的状态。 因此应将其定义在一个比页面组件生命周期更长的地方，页面切换时，只是 <code>Router</code> 的子组件（即页面组件）在发生变化，而 <code>Router</code> 和它的父组件 <code>App</code> 并未发生变化，也就不会触发重新渲染。</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadContextProvider</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AppRouting</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GlobalUploadDrawer</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">UploadContextProvider</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，在全局上传组件被创建后，就会一直存在，即使页面发生切换。同时，由于它包裹在 <code>UploadContextProvider</code> 下面，能够随时读取和更新全局的上传状态。</p><h2 id="绑定对应回调" tabindex="-1"><a class="header-anchor" href="#绑定对应回调"><span>绑定对应回调</span></a></h2><p>在上传任务的处理中，最初将上传任务交给 <code>UploadContext</code> 处理：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">UploadCallbackType</span> <span class="token punctuation">{</span>
  onStartCallback<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  onProgressCallback<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  onSuccessCallback<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  onFailCallback<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">UploadContextType</span> <span class="token punctuation">{</span>
  uploadFiles<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token function-variable function">handleUpload</span><span class="token operator">:</span> <span class="token punctuation">(</span>files<span class="token operator">:</span> File<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> callback<span class="token operator">:</span> UploadCallbackType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  <span class="token function-variable function">handleCancel</span><span class="token operator">:</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> UploadContext <span class="token operator">=</span> <span class="token generic-function"><span class="token function">createContext</span><span class="token generic class-name"><span class="token operator">&lt;</span>UploadContextType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  uploadFiles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token function-variable function">handleUpload</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">handleCancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">interface</span> <span class="token class-name">UploadContextProviderProps</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> UploadContextProvider<span class="token operator">:</span> <span class="token constant">FC</span><span class="token operator">&lt;</span>UploadContextProviderProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  children
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploadFiles<span class="token punctuation">,</span> setUploadFiles<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token comment">// 这里需要生成十个 ref</span>
  <span class="token keyword">const</span> uploaderRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>ZdtUploaderRef<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> uploadTaskRef <span class="token operator">=</span>
    <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>ZdtUploaderOutput <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> UploadCallbackType<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 上传任务队列</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span>files<span class="token operator">:</span> File<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> callback<span class="token operator">:</span> UploadCallbackType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> taskId <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    uploadTaskRef<span class="token punctuation">.</span>current<span class="token punctuation">[</span>taskId<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      data<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 上传任务开始之前的文件数据我们先设置为null</span>
      callback
    <span class="token punctuation">}</span>

    uploaderRef<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">upload</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里添加取消文件上传的逻辑</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">uploadBatchFilesStart</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onUploadProgress</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">uploadBatchFilesSuccess</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">uploadBatchFilesFailed</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadContext.Provider</span></span>
      <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        uploadFiles<span class="token punctuation">,</span>
        handleUpload<span class="token punctuation">,</span>
        handleCancel
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
      // 这里生成十个组件
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ZdtUploaderBtn</span></span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploaderRef<span class="token punctuation">}</span></span>
        <span class="token attr-name">showProgress</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">multiple</span>
        <span class="token attr-name">onUploadSuccess</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploadBatchFilesSuccess<span class="token punctuation">}</span></span>
        <span class="token attr-name">onUploadFailed</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploadBatchFilesFailed<span class="token punctuation">}</span></span>
        <span class="token attr-name">onUploadStart</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploadBatchFilesStart<span class="token punctuation">}</span></span>
        <span class="token attr-name">onUploadProgress</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onUploadProgress<span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">UploadContext.Provider</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是经过仔细思考后，这种方案将 <code>ZdtUploaderBtn</code> 直接定义好，很自定义其他属性。</p><p>因此，上传组件应该由页面自己决定，而 <code>upload-context</code> 只负责管理上传文件的状态，只需提供 <code>createUploader</code> 方法供页面调用，这样就能避免复杂的属性绑定。</p><p>子页面传入 <code>ZdtUploaderBtnProps</code>，可以很方便地自定义上传组件属性。</p><p>这样，子页面每次调用 createUploader，<strong>页面上都会创建一个由该子页面定义的上传组件</strong>，同时每个上传任务的文件由 Map 存储起来，这样在触发回调更新上传文件时，可以保证一一对应。</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">UploadContextType</span> <span class="token punctuation">{</span>
  uploadFilesMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// 上传文件对象</span>
  <span class="token function-variable function">createUploader</span><span class="token operator">:</span> <span class="token punctuation">(</span>
    props<span class="token operator">:</span> ZdtUploaderBtnProps<span class="token punctuation">,</span>
    files<span class="token operator">?</span><span class="token operator">:</span> File<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    groupLayer<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token comment">// 初始化 uploader</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> UploadContext <span class="token operator">=</span> <span class="token generic-function"><span class="token function">createContext</span><span class="token generic class-name"><span class="token operator">&lt;</span>UploadContextType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  uploadFilesMap<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function-variable function">createUploader</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> UploadContextProvider<span class="token operator">:</span> <span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> children <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploadFilesMap<span class="token punctuation">,</span> setUploadFilesMap<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>
    Map<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
  <span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">updateFileMap</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ZdtUploaderOutput<span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setUploadFilesMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>oldFilesMap<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> newFilesMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>oldFilesMap<span class="token punctuation">)</span>
      newFilesMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> data<span class="token punctuation">.</span>nzFiles<span class="token operator">!</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> newFilesMap
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 由外部设置 uploader</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploaders<span class="token punctuation">,</span> setUploaders<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>ReactNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> uploaderRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>ZdtUploaderRef<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

  <span class="token comment">/**
   * 自定义 ZdtUploaderBtn
   * @param props ZdtUploaderBtnProps
   */</span>
  <span class="token keyword">const</span> <span class="token function-variable function">createUploader</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> ZdtUploaderBtnProps<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ZdtUploaderBtn</span></span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploaderRef<span class="token punctuation">}</span></span>
        <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">subDirectory</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&#39;&#39;</span> <span class="token operator">+</span> <span class="token function">generateUniqString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">showProgress</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">multiple</span>
        <span class="token attr-name">onUploadStart</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">updateFileMap</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> uploaders<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
          props<span class="token punctuation">.</span>onUploadStart<span class="token operator">?.</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">onUploadProgress</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">updateFileMap</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> uploaders<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
          props<span class="token punctuation">.</span>onUploadProgress<span class="token operator">?.</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">onUploadSuccess</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">updateFileMap</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> uploaders<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
          props<span class="token punctuation">.</span>onUploadSuccess<span class="token operator">?.</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">onUploadFailed</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">updateFileMap</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> uploaders<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
          props<span class="token punctuation">.</span>onUploadFailed<span class="token operator">?.</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span>
    <span class="token punctuation">)</span>

    <span class="token function">setUploaders</span><span class="token punctuation">(</span><span class="token punctuation">(</span>olduploaders<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>olduploaders<span class="token punctuation">,</span> element<span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment">// 保证组件 ref 成功绑定</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      uploaderRef<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadContext.Provider</span></span>
      <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        uploadFilesMap<span class="token punctuation">,</span>
        createUploader
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token punctuation">{</span>uploaders<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">UploadContext.Provider</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/image-20231127194832077.png" alt="整体架构" tabindex="0" loading="lazy"><figcaption>整体架构</figcaption></figure><h2 id="支持内容区域拖拽上传" tabindex="-1"><a class="header-anchor" href="#支持内容区域拖拽上传"><span>支持内容区域拖拽上传</span></a></h2><p>由于内容区域拖拽上传也需要接入全局上传抽屉，而 <code>upload-context</code> 提供的 <code>createUploader</code> 方法，内部原理是调用 <code>uploaderRef.select()</code> 唤起文件选择器进行上传，无法实现拖拽上传。</p><p>因此需要修改 <code>createUploader</code> 方法，支持获取文件后直接上传：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// 拖拽上传需要监听 onDrop 事件传入 files 数组</span>
<span class="token keyword">const</span> <span class="token function-variable function">createUploader</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> ZdtUploaderBtnProps<span class="token punctuation">,</span> files<span class="token operator">?</span><span class="token operator">:</span> File<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ZdtUploaderBtn</span></span>
      <span class="token attr-name">...</span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">setUploaders</span><span class="token punctuation">(</span><span class="token punctuation">(</span>olduploaders<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>olduploaders<span class="token punctuation">,</span> element<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    uploaderRef<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">upload</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      uploaderRef<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来需要自定义一个 <code>global-drag-uploader</code> 组件，监听 <code>onDrop</code> 事件获取拖拽的所有文件夹，并调用 <code>createUploader</code> 方法。</p><p>在该方法中，需要实现 <code>directory</code> 和 <code>accept</code> 属性校验方法。</p><p>因此，最终代码如下：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> <span class="token constant">FC</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useContext<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> validateAccept <span class="token keyword">from</span> <span class="token string">&#39;attr-accept&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> ZdtUploaderBtnProps<span class="token punctuation">,</span> shortToast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@yuanfudao/zdt-react&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../context/upload-context&#39;</span>
<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&#39;./global-drag-uploader.module.scss&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">IFileSystemEntry</span> <span class="token punctuation">{</span>
  isFile<span class="token operator">:</span> <span class="token builtin">boolean</span>
  isDirectory<span class="token operator">:</span> <span class="token builtin">boolean</span>
  file<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  createReader<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token comment">// 或创建具体类型，例如： { readEntries: (callback: (entries: MyFileSystemEntry[]) =&gt; void) =&gt; void };</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">GlobalDragUploader</span> <span class="token punctuation">{</span>
  uploaderProps<span class="token operator">:</span> ZdtUploaderBtnProps
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> GlobalDragUploader<span class="token operator">:</span> <span class="token constant">FC</span><span class="token operator">&lt;</span>GlobalDragUploader<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> directory<span class="token punctuation">,</span> accept <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">.</span>uploaderProps
  <span class="token keyword">const</span> <span class="token punctuation">{</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> props

  <span class="token keyword">const</span> <span class="token punctuation">[</span>isDragOver<span class="token punctuation">,</span> setIsDragOver<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> createUploader <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>UploadContext<span class="token punctuation">)</span>

  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">traverseFileTree</span><span class="token punctuation">(</span>
    fileEntryList<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    relativePath <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>File<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> promises<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>File<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> entry <span class="token keyword">of</span> fileEntryList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> entryRelativePath <span class="token operator">=</span> relativePath <span class="token operator">+</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>name <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          promises<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              entry<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">&#39;webkitRelativePath&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                  value<span class="token operator">:</span> entryRelativePath<span class="token punctuation">,</span>
                  writable<span class="token operator">:</span> <span class="token boolean">false</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token punctuation">)</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isDirectory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// dirReader.readEntries 每次只能读取 100 个文件，所以需要递归读取全部文件</span>
          <span class="token keyword">const</span> readAllEntries <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>
            dirReader<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
            items<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              dirReader<span class="token punctuation">.</span><span class="token function">readEntries</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>entries<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>entries<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// 如果还有文件，将其添加到 items 列表中并继续读取</span>
                  items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>entries<span class="token punctuation">)</span>
                  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">readAllEntries</span><span class="token punctuation">(</span>dirReader<span class="token punctuation">,</span> items<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                  <span class="token comment">// 如果没有更多文件，则完成读取，并返回获取到的全部文件</span>
                  <span class="token function">resolve</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>

          <span class="token keyword">const</span> dirReader <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">createReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          promises<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
            <span class="token function">readAllEntries</span><span class="token punctuation">(</span>dirReader<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>entries<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token function">traverseFileTree</span><span class="token punctuation">(</span>entries<span class="token punctuation">,</span> entryRelativePath <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fileList<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>fileList<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">onDrop</span><span class="token punctuation">(</span>event<span class="token operator">:</span> React<span class="token punctuation">.</span>DragEvent<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setIsDragOver</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// 获取文件</span>
    <span class="token keyword">const</span> items <span class="token operator">=</span> event<span class="token punctuation">.</span>dataTransfer<span class="token operator">?.</span>items
    <span class="token keyword">const</span> fileEntryList<span class="token operator">:</span> IFileSystemEntry<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>items<span class="token punctuation">)</span> <span class="token keyword">return</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> items<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> entry <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">webkitGetAsEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>directory <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>entry<span class="token operator">?.</span>isDirectory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        shortToast<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          message<span class="token operator">:</span> <span class="token string">&#39;上传类型错误&#39;</span><span class="token punctuation">,</span>
          description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">请上传文件夹</span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>directory <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>entry<span class="token operator">?.</span>isFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        shortToast<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;上传类型错误&#39;</span><span class="token punctuation">,</span> description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">请上传文件</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fileEntryList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">traverseFileTree</span><span class="token punctuation">(</span>fileEntryList<span class="token punctuation">)</span>

    <span class="token comment">// // 这里要对拖拽上传图片做一个后缀和accept匹配的校验</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>files<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token function">validateAccept</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> accept <span class="token operator">??</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      shortToast<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        message<span class="token operator">:</span> <span class="token string">&#39;上传格式错误&#39;</span><span class="token punctuation">,</span>
        description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">请上传</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>accept<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">格式文件</span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 过滤 .DS_Store</span>
    <span class="token keyword">const</span> fileList <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token string">&#39;.DS_Store&#39;</span><span class="token punctuation">)</span>

    <span class="token comment">// 上传</span>
    <span class="token function">createUploader</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>uploaderProps<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span>
    <span class="token comment">// refUploader.current?.upload(multiple ? fileList : fileList[0] ? [fileList[0]] : []);</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>relative<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">onDragOver</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">setIsDragOver</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">[</span><span class="token string">&#39;drag-cover&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token operator">:</span> isDragOver <span class="token operator">?</span> <span class="token string">&#39;block&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;none&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">onDrop</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onDrop<span class="token punctuation">}</span></span>
        <span class="token attr-name">onDragEnter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token function">setIsDragOver</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">onDragLeave</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setIsDragOver</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

GlobalDragUploader<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  uploaderProps<span class="token operator">:</span> <span class="token punctuation">{</span>
    directory<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    multiple<span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26)),s("div",k,[n[2]||(n[2]=s("p",{class:"hint-container-title"},"相关信息",-1)),s("p",null,[n[1]||(n[1]=t("拖拽上传详细实现过程见 ")),c(p,{to:"/frontend/practice/003-file-upload.html"},{default:l(()=>n[0]||(n[0]=[t("常见文件上传场景")])),_:1,__:[0]})])]),n[4]||(n[4]=a(`<h2 id="全局上传支持以文件夹为单位展示进度" tabindex="-1"><a class="header-anchor" href="#全局上传支持以文件夹为单位展示进度"><span>全局上传支持以文件夹为单位展示进度</span></a></h2><p>需要以文件夹层级为单位展示进度，最开始直接平铺 <code>uploadFilesMap</code> 方案无法实现。</p><p>然而由于使用全局上传，上传抽屉写在 <code>App.tsx</code> 中，因此很难支持传入 <code>props</code> 自定义以何种层级展示文件上传进度，只能以第一级为单位展示文件进度。</p><p>所以 <code>upload-context</code> 中还需要提供 <code>groupLayersMap</code>，支持页面自定义展示层级。</p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const createUploader = (props: ZdtUploaderBtnProps, files?: File[]) =&gt; {
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const createUploader = (props: ZdtUploaderBtnProps, files?: File[], groupLayer?: number) =&gt; {
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const element = (
</span><span class="token prefix unchanged"> </span><span class="token line">   &lt;ZdtUploaderBtn
</span><span class="token prefix unchanged"> </span><span class="token line">     ref={uploaderRef}
</span><span class="token prefix unchanged"> </span><span class="token line">     key={Date.now()}
</span><span class="token prefix unchanged"> </span><span class="token line">     subDirectory={&#39;&#39; + generateUniqString() + &#39;/&#39;}
</span><span class="token prefix unchanged"> </span><span class="token line">     showProgress={false}
</span><span class="token prefix unchanged"> </span><span class="token line">     multiple
</span><span class="token prefix unchanged"> </span><span class="token line">     onUploadStart={(data) =&gt; {
</span><span class="token prefix unchanged"> </span><span class="token line">       updateFileMap(data, uploaders.length);
</span></span>
<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">       // 设置展示层级，默认展示根路径
</span><span class="token prefix inserted">+</span><span class="token line">       setGroupLayersMap((oldGroupLayersMap) =&gt; {
</span><span class="token prefix inserted">+</span><span class="token line">         const newGroupLayersMap = new Map(oldGroupLayersMap);
</span><span class="token prefix inserted">+</span><span class="token line">         newGroupLayersMap.set(uploaders.length, groupLayer ?? 1);
</span><span class="token prefix inserted">+</span><span class="token line">         return newGroupLayersMap;
</span><span class="token prefix inserted">+</span><span class="token line">       });
</span></span>
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">       props.onUploadStart?.(data);
</span><span class="token prefix unchanged"> </span><span class="token line">     }}
</span><span class="token prefix unchanged"> </span><span class="token line">     ...
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改全局上传抽屉组件：</p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> export const GlobalUploadDrawer: FC = () =&gt; {
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   const uploadFiles = flatten(Array.from(uploadFilesMap.values())).reverse();
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   const groupedUploadFiles = groupByFolder(uploadFilesMap, groupLayersMap);
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>UploadFilesMap</code> 中仅包含平铺后的文件信息，无法直接识别上传的文件属于文件夹还是文件，所以需要利用 <code>webkitRelativePath</code> 判断，若为空则为文件，若不为空则属于文件夹。</p><p>同时，分组逻辑应为 <code>taskId + &#39;-&#39; + groupLayersMap.get(taskId).join(&#39;/&#39;)</code> 保证每个任务下的文件夹独立。</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">const</span> <span class="token function-variable function">groupByFolder</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  uploadFilesMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  groupLayersMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> folders<span class="token operator">:</span> Record<span class="token operator">&lt;</span>
    <span class="token builtin">string</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> total<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> percent<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> uid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
  <span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  uploadFilesMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>uploadFiles<span class="token punctuation">,</span> taskId<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    uploadFiles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 判断文件属于文件夹内还是文件</span>
      <span class="token comment">// @ts-expect-error</span>
      <span class="token keyword">const</span> relativePath <span class="token operator">=</span> file<span class="token punctuation">.</span>originFileObj<span class="token operator">!</span><span class="token punctuation">.</span>webkitRelativePath
      <span class="token keyword">const</span> pathParts <span class="token operator">=</span> relativePath <span class="token operator">?</span> relativePath<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span>file<span class="token punctuation">.</span>name<span class="token punctuation">]</span>

      <span class="token keyword">const</span> folder <span class="token operator">=</span>
        taskId <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> pathParts<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> groupLayersMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> pathParts<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> groupLayersMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>folders<span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        folders<span class="token punctuation">[</span>folder<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> total<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> percent<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> uid<span class="token operator">:</span> folder<span class="token punctuation">,</span> name <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      folders<span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">.</span>total<span class="token operator">++</span>
      folders<span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">.</span>percent <span class="token operator">+=</span> file<span class="token punctuation">.</span>percent<span class="token operator">!</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// reverse 保证最新的任务在最上方</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>folders<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        name<span class="token operator">:</span> folders<span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span class="token operator">?.</span>name<span class="token punctuation">,</span>
        percent<span class="token operator">:</span> folders<span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">.</span>percent <span class="token operator">/</span> folders<span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">.</span>total<span class="token punctuation">,</span>
        uid<span class="token operator">:</span> folders<span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span class="token operator">?.</span>uid
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10))])}const b=e(r,[["render",d],["__file","004-global-upload.html.vue"]]),g=JSON.parse('{"path":"/frontend/practice/004-global-upload.html","title":"全局上传组件","lang":"zh-CN","frontmatter":{"title":"全局上传组件","date":"2023-11-22T00:00:00.000Z","icon":"shangchuan","category":["practice"],"tag":["frontend","图片批注"],"description":"上传需要涉及到各个页面，因此需要实现一个全局上传组件，同时支持拖拽上传。 根据产品 PRD，整理出如下几个重点部分： 管理全局的上传任务状态 文件上传需要绑定每次上传任务的回调 拖拽内容区域上传 上传文件时进度以文件夹为单位进行展示 管理全局的上传任务状态 第一个问题可以使用 Context 或着 Redux 解决，在这里由于没有涉及到其他更复杂的状态...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/practice/004-global-upload.html"}],["meta",{"property":"og:title","content":"全局上传组件"}],["meta",{"property":"og:description","content":"上传需要涉及到各个页面，因此需要实现一个全局上传组件，同时支持拖拽上传。 根据产品 PRD，整理出如下几个重点部分： 管理全局的上传任务状态 文件上传需要绑定每次上传任务的回调 拖拽内容区域上传 上传文件时进度以文件夹为单位进行展示 管理全局的上传任务状态 第一个问题可以使用 Context 或着 Redux 解决，在这里由于没有涉及到其他更复杂的状态..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/image-20231127194832077.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"全局上传组件"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:tag","content":"图片批注"}],["meta",{"property":"article:published_time","content":"2023-11-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"全局上传组件\\",\\"image\\":[\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/image-20231127194832077.png\\"],\\"datePublished\\":\\"2023-11-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 管理全局的上传任务状态","slug":"管理全局的上传任务状态","link":"#管理全局的上传任务状态","children":[]},{"level":2,"title":"2 绑定对应回调","slug":"绑定对应回调","link":"#绑定对应回调","children":[]},{"level":2,"title":"3 支持内容区域拖拽上传","slug":"支持内容区域拖拽上传","link":"#支持内容区域拖拽上传","children":[]},{"level":2,"title":"4 全局上传支持以文件夹为单位展示进度","slug":"全局上传支持以文件夹为单位展示进度","link":"#全局上传支持以文件夹为单位展示进度","children":[]}],"git":{"createdTime":1704622731000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":2}]},"readingTime":{"minutes":6.84,"words":2052},"filePathRelative":"frontend/practice/004-global-upload.md","localizedDate":"2023年11月22日","excerpt":"","autoDesc":true}');export{b as comp,g as data};
