import{_ as t,c as p,e as o,a as s,d as a,b as r,r as l,o as c}from"./app-nKKmHBUX.js";const i={},d={href:"https://github.com/evrone/postcss-px-to-viewport",target:"_blank",rel:"noopener noreferrer"};function u(m,n){const e=l("ExternalLinkIcon");return c(),p("div",null,[n[3]||(n[3]=o(`<p>由于 <code>px</code> 是固定单位，所以在不同设备上显示的大小是固定的，而不同设备又有不同大小，为了适配不同设备的单位大小，需要将 <code>px</code> 转换为视口单位。</p><p>确定方案之后，那么思考如何将 <code>px</code> 转为视口单位呢，一个一个算？不太可能，因为你事先并不知道用户手中的设备是什么大小，这样换算得到的结果并不能满足所有用户的需求，因此需要一个更为适用的方法。</p><p>这就需要用到一个插件：<code>postcss-px-to-viewport</code>。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>npm install postcss-px-to-viewport --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数配置" tabindex="-1"><a class="header-anchor" href="#参数配置"><span>参数配置</span></a></h2><p>新建 <code>postcss.config.js</code>，默认配置如下：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;postcss-px-to-viewport&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">unitToConvert</span><span class="token operator">:</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 需要转换的单位</span>
      <span class="token literal-property property">viewportWidth</span><span class="token operator">:</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token comment">// 设计稿的视口宽度</span>
      <span class="token literal-property property">unitPrecision</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 单位转换后保留的精度</span>
      <span class="token literal-property property">propList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 能转换的vw属性列表</span>
      <span class="token literal-property property">viewportUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 希望使用的视口单位</span>
      <span class="token literal-property property">fontViewportUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 字体使用的视口单位</span>
      <span class="token literal-property property">selectorBlackList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 需要忽略的css选择器</span>
      <span class="token literal-property property">minPixelValue</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 设置最小的转换数值，如果为1，只有大于1的值才会被转换</span>
      <span class="token literal-property property">mediaQuery</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 媒体查询中是否需要转换单位</span>
      <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否直接更换属性值</span>
      <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token comment">// 忽略一些文件比如 node_modules</span>
      <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token comment">// 如果设置了 include，则仅转换匹配的文件</span>
      <span class="token literal-property property">landscape</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否添加根据 landscapeWidth 生成的媒体查询条件 @media (orientation: landscape)</span>
      <span class="token literal-property property">landscapeUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 横屏时使用的单位</span>
      <span class="token literal-property property">landscapeWidth</span><span class="token operator">:</span> <span class="token number">568</span> <span class="token comment">// 横屏时使用的视口宽度</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)),s("p",null,[n[1]||(n[1]=a("详细配置见 ")),s("a",d,[n[0]||(n[0]=a("postcss-px-to-viewport")),r(e)]),n[2]||(n[2]=a("。"))]),n[4]||(n[4]=s("p",null,[a("当全部设置完成后，重新运行项目，查看 css 属性，即可发现所有 "),s("code",null,"px"),a(" 单位全部变成了 "),s("code",null,"vw"),a(" 单位。")],-1)),n[5]||(n[5]=s("p",null,"切换不同的设备时，大小会随之发生变化。",-1))])}const v=t(i,[["render",u],["__file","005-postcss-px-to-viewport.html.vue"]]),y=JSON.parse('{"path":"/frontend/practice/005-postcss-px-to-viewport.html","title":"移动端适配方案 postcss-px-to-viewport","lang":"zh-CN","frontmatter":{"title":"移动端适配方案 postcss-px-to-viewport","date":"2022-03-23T00:00:00.000Z","icon":"shikou1","category":["practice"],"tag":["frontend","移动端适配","postcss"],"description":"由于 px 是固定单位，所以在不同设备上显示的大小是固定的，而不同设备又有不同大小，为了适配不同设备的单位大小，需要将 px 转换为视口单位。 确定方案之后，那么思考如何将 px 转为视口单位呢，一个一个算？不太可能，因为你事先并不知道用户手中的设备是什么大小，这样换算得到的结果并不能满足所有用户的需求，因此需要一个更为适用的方法。 这就需要用到一个插...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/practice/005-postcss-px-to-viewport.html"}],["meta",{"property":"og:title","content":"移动端适配方案 postcss-px-to-viewport"}],["meta",{"property":"og:description","content":"由于 px 是固定单位，所以在不同设备上显示的大小是固定的，而不同设备又有不同大小，为了适配不同设备的单位大小，需要将 px 转换为视口单位。 确定方案之后，那么思考如何将 px 转为视口单位呢，一个一个算？不太可能，因为你事先并不知道用户手中的设备是什么大小，这样换算得到的结果并不能满足所有用户的需求，因此需要一个更为适用的方法。 这就需要用到一个插..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:tag","content":"移动端适配"}],["meta",{"property":"article:tag","content":"postcss"}],["meta",{"property":"article:published_time","content":"2022-03-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"移动端适配方案 postcss-px-to-viewport\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"2 参数配置","slug":"参数配置","link":"#参数配置","children":[]}],"git":{"createdTime":1704622731000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":2}]},"readingTime":{"minutes":1.65,"words":496},"filePathRelative":"frontend/practice/005-postcss-px-to-viewport.md","localizedDate":"2022年3月23日","excerpt":"","autoDesc":true}');export{v as comp,y as data};
