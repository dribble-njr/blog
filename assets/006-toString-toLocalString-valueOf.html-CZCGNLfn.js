import{_ as a,c as t,e as s,o as e}from"./app-CMUwc0b2.js";const o={};function c(i,n){return e(),t("div",null,n[0]||(n[0]=[s(`<p>Object 原型上有三个方法 <code>toString()</code>、<code>toLocalString</code>、<code>valueOf()</code> 可以将对象转换为原始值，然而对于不同的对象类型调用这几种方法会有不同的行为。</p><h2 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring"><span><code>toString()</code></span></a></h2><p><code>toString()</code> 方法用于将一个对象转换为字符串表示形式。对于基本数据类型（如数字、布尔值、字符串等），<code>toString()</code> 方法会返回对应的字符串表示。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">123</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出 &quot;123&quot;</span>

<span class="token keyword">const</span> bool <span class="token operator">=</span> <span class="token boolean">true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bool<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出 &quot;true&quot;</span>

<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出 &quot;Hello&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tolocalestring" tabindex="-1"><a class="header-anchor" href="#tolocalestring"><span><code>toLocaleString()</code></span></a></h2><p><code>toLocaleString()</code> 方法与 <code>toString()</code> 类似，但它返回的是一个本地化（即与用户本地文化相关的）的字符串表示。</p><p>这意味着返回的字符串可能根据用户的地区设置而有所不同，比如使用不同的日期格式、数字格式等。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出本地化的日期时间字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="valueof" tabindex="-1"><a class="header-anchor" href="#valueof"><span><code>valueOf()</code></span></a></h2><p><code>valueOf()</code> 方法返回指定对象的原始值。对于大多数对象来说，<code>valueOf()</code> 方法返回的值与对象本身是相同的，但可以通过重写这个方法来改变返回的值。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">123</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出 123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自动调用顺序" tabindex="-1"><a class="header-anchor" href="#自动调用顺序"><span>自动调用顺序</span></a></h2><p>在 JavaScript 内部，当需要将对象转换为原始值时（比如在算术运算、逻辑运算、字符串拼接等情况下），会自动调用对象的 <code>valueOf()</code> 和 <code>toString()</code> 方法来获取原始值。它们的调用顺序如下：</p><ol><li>如果对象具有 <code>valueOf()</code> 方法且返回的是原始值（非对象），则直接使用该值。</li><li>如果对象没有 <code>valueOf()</code> 方法，或者 <code>valueOf()</code> 返回的是对象，那么会调用对象的 <code>toString()</code> 方法。</li><li>如果对象没有 <code>toString()</code> 方法，或者 <code>toString()</code> 返回的是对象，那么会抛出 TypeError 错误。</li></ol><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>valueOf()</code> 和 <code>toString()</code> 方法在不同的上下文中可能会有不同的表现，具体取决于 JavaScript 引擎的实现和调用方式。</p></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>这三种方法用于获得对象的字符串或原始值，在一些情况下会被 JavaScript 引擎自动调用，区别如下：</p><ul><li><code>toString()</code> 用于将对象转换为字符串表示形式。</li><li><code>toLocaleString()</code> 返回一个本地化的字符串表示。</li><li><code>valueOf()</code> 返回对象的原始值。</li></ul>`,18)]))}const p=a(o,[["render",c],["__file","006-toString-toLocalString-valueOf.html.vue"]]),r=JSON.parse('{"path":"/frontend/basic/javascript/006-toString-toLocalString-valueOf.html","title":"对象转换方法","lang":"zh-CN","frontmatter":{"title":"对象转换方法","date":"2024-04-18T00:00:00.000Z","icon":"string","category":["JavaScript"],"tag":["language advanced"],"description":"Object 原型上有三个方法 toString()、toLocalString、valueOf() 可以将对象转换为原始值，然而对于不同的对象类型调用这几种方法会有不同的行为。 toString() toString() 方法用于将一个对象转换为字符串表示形式。对于基本数据类型（如数字、布尔值、字符串等），toString() 方法会返回对应的字符串...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/basic/javascript/006-toString-toLocalString-valueOf.html"}],["meta",{"property":"og:title","content":"对象转换方法"}],["meta",{"property":"og:description","content":"Object 原型上有三个方法 toString()、toLocalString、valueOf() 可以将对象转换为原始值，然而对于不同的对象类型调用这几种方法会有不同的行为。 toString() toString() 方法用于将一个对象转换为字符串表示形式。对于基本数据类型（如数字、布尔值、字符串等），toString() 方法会返回对应的字符串..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"language advanced"}],["meta",{"property":"article:published_time","content":"2024-04-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对象转换方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 toString()","slug":"tostring","link":"#tostring","children":[]},{"level":2,"title":"2 toLocaleString()","slug":"tolocalestring","link":"#tolocalestring","children":[]},{"level":2,"title":"3 valueOf()","slug":"valueof","link":"#valueof","children":[]},{"level":2,"title":"4 自动调用顺序","slug":"自动调用顺序","link":"#自动调用顺序","children":[]},{"level":2,"title":"5 总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1713445632000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":3}]},"readingTime":{"minutes":1.96,"words":589},"filePathRelative":"frontend/basic/javascript/006-toString-toLocalString-valueOf.md","localizedDate":"2024年4月18日","excerpt":"","autoDesc":true}');export{p as comp,r as data};
