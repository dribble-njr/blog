import{_ as s,c as o,e as a,b as c,w as i,r as p,o as r,a as e,d as n}from"./app-CMUwc0b2.js";const d={};function u(f,l){const t=p("CodeDemo");return r(),o("div",null,[l[1]||(l[1]=a('<h2 id="一、基本概念" tabindex="-1"><a class="header-anchor" href="#一、基本概念"><span>一、基本概念</span></a></h2><h3 id="_1-1-flexbox-是什么" tabindex="-1"><a class="header-anchor" href="#_1-1-flexbox-是什么"><span>1.1 flexbox 是什么</span></a></h3><p>CSS3 的新布局模式，是一种当页面需要适应不同屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。</p><p>flex 弹性盒是一个 <strong>一维布局</strong> 模型，可以在界面中的项目之间提供空间分布和强大对齐功能的布局方式。</p><p>所谓一维布局模型是指：flex 在同一时刻只控制行或列。这和 <strong>二维布局模型</strong> Grid Layout （同时控制行和列）相反。</p><h3 id="_1-2-flexbox-的两个轴" tabindex="-1"><a class="header-anchor" href="#_1-2-flexbox-的两个轴"><span>1.2 flexbox 的两个轴</span></a></h3><p>flexbox 有两个轴——主轴和交叉轴。主轴由 <code>flex-direction</code> 属性定义，而交叉轴和主轴垂直。对 flexbox 做的一切操作都涉及到这两个轴，flexbox 的特点是可以将内容沿着主轴或交叉轴对齐和调整。</p><h3 id="_1-3-起始线和终止线" tabindex="-1"><a class="header-anchor" href="#_1-3-起始线和终止线"><span>1.3 起始线和终止线</span></a></h3><p>flexbox 不会对文档的书写模式提供假设。过去，CSS 的书写模式主要被认为是水平的，从左到右的。现代的布局方式涵盖了书写模式的范围，所以不再假设一行文字是从文档的左上角开始向右书写, 新的行也不是必须出现在另一行的下面。</p><h3 id="_1-4-flex-容器和项目" tabindex="-1"><a class="header-anchor" href="#_1-4-flex-容器和项目"><span>1.4 flex 容器和项目</span></a></h3><p>文档中采用了 flexbox 的区域就叫做 <strong>flex 容器（简称”容器“）</strong>。为了创建容器， 我们把一个容器的 <code>display</code> 属性值改为 <code>flex</code> （块级）或者 <code>inline-flex</code>（行级） 。完成这一步之后，容器中的直系子元素就会变为 <strong>flex 项目（简称“项目”）</strong>。</p><h2 id="二、容器属性" tabindex="-1"><a class="header-anchor" href="#二、容器属性"><span>二、容器属性</span></a></h2><p>以下都是父元素的属性。</p><ul><li><code>flex-direction</code>：决定主轴方向（即项目的排列方向）</li><li><code>flex-wrap</code>：决定项目是否换行</li><li><code>flex-flow</code>： <code>flex-direction</code> 和 <code>flex-wrap</code> 的简写</li><li><code>justify-content</code>：项目在主轴上的对齐方式</li><li><code>align-items</code>：项目在交叉轴上的对齐方式</li><li><code>align-content</code>：控制多行项目的对齐方式</li></ul><h3 id="_2-1-flex-direction" tabindex="-1"><a class="header-anchor" href="#_2-1-flex-direction"><span>2.1 flex-direction</span></a></h3><p><code>flex-direction</code> 决定主轴方向、起始线和终止线位置。</p><p>它有四个<strong>取值</strong>：</p><ul><li><code>row</code> （默认）：主轴方向为水平方向，主轴的起始线是左边，终止线是右边</li><li><code>row-reverse</code>：主轴方向为水平方向，主轴的起始线和终止线位置交换</li><li><code>column</code>：主轴方向为垂直方向，主轴的起始线是上边，终止线是下边</li><li><code>column-reverse</code>：主轴方向为垂直方向，主轴的起始线和终止线交换</li></ul><p>使用场景：网页整体布局、导航栏等等</p><h3 id="_2-2-flex-wrap" tabindex="-1"><a class="header-anchor" href="#_2-2-flex-wrap"><span>2.2 flex-wrap</span></a></h3><p><code>flex-wrap</code> 决定 flex 项目是否换行，可实现多行 flex 容器，这样做时，应把每行都看作一个新的 flex 容器。</p><p>默认情况下子元素是不换行的，如果一条轴线排不下，就可以设置它来换行。</p><p><strong>属性值</strong>：</p><ul><li><code>nowrap</code>（默认）：不换行</li><li><code>wrap</code>：换行，第一行在上方</li><li><code>wrap-reverse</code>：换行，第一行在下方</li></ul><h3 id="_2-3-flex-flow" tabindex="-1"><a class="header-anchor" href="#_2-3-flex-flow"><span>2.3 flex-flow</span></a></h3><p><code>flex-flow</code> 是 <code>flex-direction</code> 和 <code>flex-wrap</code> 的简写，表示 <code>flex</code> 布局的流动特性。第一个指定的值为 <code>flex-direction</code> ，第二个指定的值为 <code>flex-wrap</code>。默认值当然是 <code>row nowrap</code>。</p><h3 id="_2-4-justify-content" tabindex="-1"><a class="header-anchor" href="#_2-4-justify-content"><span>2.4 justify-content</span></a></h3><p><code>justify-content</code> 决定项目在<strong>主轴</strong>上的排列（对齐）方式（属性决定了水平方向子项的对齐和分布方式）。</p><p>有以下<strong>取值</strong>：</p><ul><li><code>flex-start</code> （默认值）：起始线对齐（项目从容器的起始线开始排列）</li><li><code>flex-end</code>：终止线对齐（项目从容器的终止线开始排列）</li><li><code>center</code>：居中对齐</li><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。around 是环绕的意思，意思是每个 flex 子项两侧都环绕互不干扰的等宽的空白间距，最终视觉上边缘两侧的空白只有中间空白宽度一半</li><li><code>space-between</code>：两端对齐，项目之间的间隔都相等，between 是中间的意思，意思是多余的空白间距只在元素中间区域分配</li><li><code>space-evenly</code>：均匀分布每个项目，每个 flex 子项两侧空白间距完全相等，项目之间的间隔和项目与边框之间的间隔相等</li></ul><h3 id="_2-5-align-items" tabindex="-1"><a class="header-anchor" href="#_2-5-align-items"><span>2.5 align-items</span></a></h3><p><code>align-items</code> 定义项目在<strong>交叉轴</strong>上的排列（对齐）方式。</p><p><strong>取值</strong>：</p><ul><li><code>stretch</code>（默认值）：如项目没有设置高度，或者高度为 auto，则占满整个容器</li><li><code>flex-start</code>：起始线对齐</li><li><code>flex-end</code>：终止线对齐</li><li><code>center</code>：居中对齐</li><li><code>baseline</code>： 项目的第一行文字的基线对齐</li></ul><h3 id="_2-6-align-content" tabindex="-1"><a class="header-anchor" href="#_2-6-align-content"><span>2.6 align-content</span></a></h3><p><code>align-content</code> 用于控制多行项目在交叉轴上的对齐方式，如果项目<strong>只有一行则不会起作用</strong>。</p><p><strong>取值</strong>：</p><ul><li><code>stretch</code>（默认值）：即在项目没设置高度，或高度为 auto 情况下让项目填满整个容器，与 align-items 类似</li><li><code>flex-start</code>：与交叉轴起始线对齐</li><li><code>flex-end</code>：与交叉轴的终点对齐</li><li><code>center</code>：与交叉轴的中点对齐</li><li><code>space-between</code>：同上</li><li><code>space-around</code>：同上</li><li><code>space-evenly</code>：同上</li></ul>',38)),c(t,{id:"code-demo-263",type:"normal",code:"eJx9T0tuwyAQvcqIboviNO2i1MpJurHN2J4KAwIanES5ewY7iryKWL0/cxVjmoxQotZ0Ov5agNof/b7e+Sf42ILDFnxuwdcK6t1aJN5FFyMXM4RrMWmK3jRnBb3B+acwf/8xUX+WnbMJbVIQfdOhbDFlRLtYGkODlZRwigo6NmHY8C+CZUT2xmUFwWXIofHMFyWTTqOCQ1X59Rsj0jByyf7JtC5oDMz4GaIzpOENEVm6lQq/3tO6WUa6kB3UIyCZWvKPiZeF+ru8RZ2aMJBVUHFiCfCMuN0B6AKHxw=="},{default:i(()=>l[0]||(l[0]=[e("div",{class:"language-html line-numbers-mode","data-ext":"html","data-title":"html"},[e("pre",{class:"language-html"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("div")]),e("span",{class:"token punctuation"},">")]),n(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("p")]),e("span",{class:"token punctuation"},">")]),n("p1"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("p")]),e("span",{class:"token punctuation"},">")]),n(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("p")]),e("span",{class:"token punctuation"},">")]),n("p2"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("p")]),e("span",{class:"token punctuation"},">")]),n(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("p")]),e("span",{class:"token punctuation"},">")]),n("p3"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("p")]),e("span",{class:"token punctuation"},">")]),n(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("p")]),e("span",{class:"token punctuation"},">")]),n("p4"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("p")]),e("span",{class:"token punctuation"},">")]),n(`
  `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("p")]),e("span",{class:"token punctuation"},">")]),n("p5"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("p")]),e("span",{class:"token punctuation"},">")]),n(`
`),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("div")]),e("span",{class:"token punctuation"},">")]),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),e("div",{class:"language-css line-numbers-mode","data-ext":"css","data-title":"css"},[e("pre",{class:"language-css"},[e("code",null,[e("span",{class:"token selector"},"div"),n(),e("span",{class:"token punctuation"},"{"),n(`
  `),e("span",{class:"token property"},"display"),e("span",{class:"token punctuation"},":"),n(" flex"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"justify-content"),e("span",{class:"token punctuation"},":"),n(" space-between"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"align-items"),e("span",{class:"token punctuation"},":"),n(" center"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"align-content"),e("span",{class:"token punctuation"},":"),n(" space-between"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"flex-flow"),e("span",{class:"token punctuation"},":"),n(" row wrap"),e("span",{class:"token punctuation"},";"),n(`

  `),e("span",{class:"token property"},"width"),e("span",{class:"token punctuation"},":"),n(" 300px"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"height"),e("span",{class:"token punctuation"},":"),n(" 100px"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"border"),e("span",{class:"token punctuation"},":"),n(" 1px solid #eee"),e("span",{class:"token punctuation"},";"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`

`),e("span",{class:"token selector"},"p"),n(),e("span",{class:"token punctuation"},"{"),n(`
  `),e("span",{class:"token property"},"box-sizing"),e("span",{class:"token punctuation"},":"),n(" border-box"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"width"),e("span",{class:"token punctuation"},":"),n(" 100px"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"border"),e("span",{class:"token punctuation"},":"),n(" 1px solid #d9d9d9"),e("span",{class:"token punctuation"},";"),n(`
  `),e("span",{class:"token property"},"margin"),e("span",{class:"token punctuation"},":"),n(" 0 10px"),e("span",{class:"token punctuation"},";"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1)])),_:1,__:[0]}),l[2]||(l[2]=a('<h2 id="三、项目属性" tabindex="-1"><a class="header-anchor" href="#三、项目属性"><span>三、项目属性</span></a></h2><p>项目属性针对子元素。</p><ul><li><code>order</code>：定义项目的排列顺序</li><li><code>flex-grow</code>：定义项目放大比例</li><li><code>flex-shrink</code>：定义了项目的缩小比例</li><li><code>flex-basis</code>：设置项目宽度</li><li><code>flex</code>：简写属性</li><li><code>align-self</code>：控制单个项目在交叉轴上的排列对齐方式</li></ul><h3 id="_3-1-order" tabindex="-1"><a class="header-anchor" href="#_3-1-order"><span>3.1 order</span></a></h3><p><code>order</code> 属性定义项目的排列顺序，数值越小，排列越靠前。</p><p><strong>取值</strong>：</p><ul><li>默认为 0，取值为整数</li></ul><h3 id="_3-2-flex-grow" tabindex="-1"><a class="header-anchor" href="#_3-2-flex-grow"><span>3.2 flex-grow</span></a></h3><p><code>flex-grow</code> 定义项目放大比例，放大的前提是父元素有足够空间。实际上是定义子元素占容器空间的份数。若没定义此属性，则空间按自己本身内容撑开。</p><blockquote><p>grow 是扩展的意思，扩展的就是 flex 子项所占据的宽度，扩展所侵占的空间就是除去元素外的剩余的空白间隙。</p><p>注意：即使设置了固定宽度，若有剩余空间依旧会放大。</p></blockquote><p><strong>取值</strong>：</p><ul><li>默认为 0，不放大，取值为数值</li></ul><h3 id="_3-3-flex-shrink" tabindex="-1"><a class="header-anchor" href="#_3-3-flex-shrink"><span>3.3 flex-shrink</span></a></h3><p><code>flex-shrink</code> 定义项目缩小比例，默认为 1，即如果空间不足，该项目将缩小。</p><blockquote><p>注意：即使设置了固定宽度，也会缩小。</p><p>但如果某个项目的 flex-shrink 属性设置为 0 ，即使空间不足，自身也不缩小。</p></blockquote><p><strong>取值</strong>：</p><ul><li>默认为 1，正数</li></ul><h3 id="_3-4-flex-basis" tabindex="-1"><a class="header-anchor" href="#_3-4-flex-basis"><span>3.4 flex-basis</span></a></h3><p>用于设置项目宽度，定义了在分配剩余空间之前元素的默认大小。默认 auto 时，项目会保持默认宽度，或者以 width 为自身的宽度，但<strong>如果设置了 flex-basis，权重会 width 属性高，因此会覆盖 width 属性。</strong></p><blockquote><p>实际上不建议对 flex 子项使用<code>width</code>属性，因为不够弹性。</p></blockquote><p><strong>取值</strong>：</p><ul><li>默认为 auto</li></ul><h3 id="_3-5-flex" tabindex="-1"><a class="header-anchor" href="#_3-5-flex"><span>3.5 flex</span></a></h3><p><code>flex</code> 属性是 <code>flex-grow</code> ，<code>flex-shrink</code> 与 <code>flex-basis</code> 三个属性的简写，用于定义项目放大，缩小与宽度。默认为 <code>flex: 0 1 auto</code>；后两个属性值可以简写。</p><p>常用：<code>flex: 1</code> 等分容器空间。</p><h3 id="_3-6-align-self" tabindex="-1"><a class="header-anchor" href="#_3-6-align-self"><span>3.6 align-self</span></a></h3><p><code>align-self</code> 指控制单独某一个 flex 子项的垂直对齐方式，写在 flex 容器上的这个 <code>align-items</code> 属性，后面是 items，有个 s，表示子项们，是全体；这里是 self，单独一个个体。其他区别不大，语法几乎一样：</p><p><code>align-self: auto | flex-start | flex-end | center | baseline | stretch;</code></p><p>唯一区别就是<code>align-self</code>多了个<code>auto</code>（默认值），表示继承自 flex 容器的<code>align-items</code>属性值。其他属性值含义一模一样。</p>',29))])}const h=s(d,[["render",u],["__file","009-flex.html.vue"]]),g=JSON.parse('{"path":"/frontend/basic/css/009-flex.html","title":"Flex 布局","lang":"zh-CN","frontmatter":{"title":"Flex 布局","date":"2021-11-18T00:00:00.000Z","icon":"a-Displayflex","category":["CSS"],"tag":["布局","弹性盒","frontend","basic-knowledge"],"description":"一、基本概念 1.1 flexbox 是什么 CSS3 的新布局模式，是一种当页面需要适应不同屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。 flex 弹性盒是一个 一维布局 模型，可以在界面中的项目之间提供空间分布和强大对齐功能的布局方式。 所谓一维布局模型是指：flex 在同一时刻只控制行或列。这和 二维布局模型 Grid Layout ...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/basic/css/009-flex.html"}],["meta",{"property":"og:title","content":"Flex 布局"}],["meta",{"property":"og:description","content":"一、基本概念 1.1 flexbox 是什么 CSS3 的新布局模式，是一种当页面需要适应不同屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。 flex 弹性盒是一个 一维布局 模型，可以在界面中的项目之间提供空间分布和强大对齐功能的布局方式。 所谓一维布局模型是指：flex 在同一时刻只控制行或列。这和 二维布局模型 Grid Layout ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"布局"}],["meta",{"property":"article:tag","content":"弹性盒"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:tag","content":"basic-knowledge"}],["meta",{"property":"article:published_time","content":"2021-11-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flex 布局\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 一、基本概念","slug":"一、基本概念","link":"#一、基本概念","children":[{"level":3,"title":"1.1 1.1 flexbox 是什么","slug":"_1-1-flexbox-是什么","link":"#_1-1-flexbox-是什么","children":[]},{"level":3,"title":"1.2 1.2 flexbox 的两个轴","slug":"_1-2-flexbox-的两个轴","link":"#_1-2-flexbox-的两个轴","children":[]},{"level":3,"title":"1.3 1.3 起始线和终止线","slug":"_1-3-起始线和终止线","link":"#_1-3-起始线和终止线","children":[]},{"level":3,"title":"1.4 1.4 flex 容器和项目","slug":"_1-4-flex-容器和项目","link":"#_1-4-flex-容器和项目","children":[]}]},{"level":2,"title":"2 二、容器属性","slug":"二、容器属性","link":"#二、容器属性","children":[{"level":3,"title":"2.1 2.1 flex-direction","slug":"_2-1-flex-direction","link":"#_2-1-flex-direction","children":[]},{"level":3,"title":"2.2 2.2 flex-wrap","slug":"_2-2-flex-wrap","link":"#_2-2-flex-wrap","children":[]},{"level":3,"title":"2.3 2.3 flex-flow","slug":"_2-3-flex-flow","link":"#_2-3-flex-flow","children":[]},{"level":3,"title":"2.4 2.4 justify-content","slug":"_2-4-justify-content","link":"#_2-4-justify-content","children":[]},{"level":3,"title":"2.5 2.5 align-items","slug":"_2-5-align-items","link":"#_2-5-align-items","children":[]},{"level":3,"title":"2.6 2.6 align-content","slug":"_2-6-align-content","link":"#_2-6-align-content","children":[]}]},{"level":2,"title":"3 三、项目属性","slug":"三、项目属性","link":"#三、项目属性","children":[{"level":3,"title":"3.1 3.1 order","slug":"_3-1-order","link":"#_3-1-order","children":[]},{"level":3,"title":"3.2 3.2 flex-grow","slug":"_3-2-flex-grow","link":"#_3-2-flex-grow","children":[]},{"level":3,"title":"3.3 3.3 flex-shrink","slug":"_3-3-flex-shrink","link":"#_3-3-flex-shrink","children":[]},{"level":3,"title":"3.4 3.4 flex-basis","slug":"_3-4-flex-basis","link":"#_3-4-flex-basis","children":[]},{"level":3,"title":"3.5 3.5 flex","slug":"_3-5-flex","link":"#_3-5-flex","children":[]},{"level":3,"title":"3.6 3.6 align-self","slug":"_3-6-align-self","link":"#_3-6-align-self","children":[]}]}],"git":{"createdTime":1697196166000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":3}]},"readingTime":{"minutes":6.52,"words":1956},"filePathRelative":"frontend/basic/css/009-flex.md","localizedDate":"2021年11月18日","excerpt":"","autoDesc":true}');export{h as comp,g as data};
