import{_ as t,c as s,e as a,o as n}from"./app-HGC3Yy25.js";const r={};function c(o,e){return n(),s("div",null,e[0]||(e[0]=[a(`<p><code>src</code> 和 <code>href</code> 之间存在区别，不能互换使用。</p><ul><li><code>src</code>：表示对资源的 <strong>引入</strong>，它指向的内容会被浏览器替换，嵌入到当前标签所在的位置；</li><li><code>href</code>：表示对资源的 <strong>引用</strong>，建立当前元素或当前文档和外部资源之间的链接关系。</li></ul><h2 id="src" tabindex="-1"><a class="header-anchor" href="#src"><span>src</span></a></h2><p><code>src</code>(Source) 属性仅仅表示会在此文档当前元素的位置上嵌入资源，它会 <strong>暂停其他资源的下载和处理</strong>。比如，当浏览器读到：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;script.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>那么浏览器会暂停当前页面的加载，直到获取、解析并执行完这个 JS 文件。它类似于将 JS 文件的内容转存到 <code>&lt;script&gt;</code> 标签中。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这就是为什么需要将 <code>&lt;script&gt;</code> 标签放到最后。</p></div><p><code>&lt;img&gt;</code> 标签也类似，它是一个空标签，包含的内容由 <code>src</code> 属性定义，当遇到这个标签，浏览器也会停止加载页面，直到获取并加载这个图片。</p><p>类似的，<code>&lt;iframe&gt;</code> 标签也一样。</p><h2 id="href" tabindex="-1"><a class="header-anchor" href="#href"><span>href</span></a></h2><p><code>href</code>(Hypertext Reference) 属性即超文本引用，它会指定 Web 资源的位置，从而定义当前链接（<code>&lt;a&gt;</code> 标签）或当前文档（<code>link</code> 标签）与目标之间的联系，<strong>不会暂停对当前文档的解析</strong>。</p><p>比如：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>style.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>浏览器会知道这是个 CSS 文件，HTML 的解析 <strong>不会</strong> 暂停，但是渲染有可能暂停，因为浏览器需要知道样式规则。</p>`,14)]))}const l=t(r,[["render",c],["__file","009-src-vs-href.html.vue"]]),i=JSON.parse('{"path":"/frontend/basic/html/009-src-vs-href.html","title":"src 和 href 的区别","lang":"zh-CN","frontmatter":{"title":"src 和 href 的区别","date":"2022-04-28T00:00:00.000Z","icon":"vs","category":["HTML"],"tag":["HTML"],"description":"src 和 href 之间存在区别，不能互换使用。 src：表示对资源的 引入，它指向的内容会被浏览器替换，嵌入到当前标签所在的位置； href：表示对资源的 引用，建立当前元素或当前文档和外部资源之间的链接关系。 src src(Source) 属性仅仅表示会在此文档当前元素的位置上嵌入资源，它会 暂停其他资源的下载和处理。比如，当浏览器读到： 那么...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/basic/html/009-src-vs-href.html"}],["meta",{"property":"og:title","content":"src 和 href 的区别"}],["meta",{"property":"og:description","content":"src 和 href 之间存在区别，不能互换使用。 src：表示对资源的 引入，它指向的内容会被浏览器替换，嵌入到当前标签所在的位置； href：表示对资源的 引用，建立当前元素或当前文档和外部资源之间的链接关系。 src src(Source) 属性仅仅表示会在此文档当前元素的位置上嵌入资源，它会 暂停其他资源的下载和处理。比如，当浏览器读到： 那么..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"HTML"}],["meta",{"property":"article:published_time","content":"2022-04-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"src 和 href 的区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 src","slug":"src","link":"#src","children":[]},{"level":2,"title":"2 href","slug":"href","link":"#href","children":[]}],"git":{"createdTime":1709553003000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":2}]},"readingTime":{"minutes":1.3,"words":390},"filePathRelative":"frontend/basic/html/009-src-vs-href.md","localizedDate":"2022年4月28日","excerpt":"","autoDesc":true}');export{l as comp,i as data};
