import{_ as r,c as o,a,e as d,d as s,b as n,w as c,r as t,o as p}from"./app-DjBUyNfp.js";const m={},u={href:"https://hub.docker.com/_/mysql/",target:"_blank",rel:"noopener noreferrer"};function b(h,e){const l=t("ExternalLinkIcon"),i=t("RouteLink");return p(),o("div",null,[e[6]||(e[6]=a("p",null,"使用 Docker 安装 MySQL。",-1)),e[7]||(e[7]=a("h2",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装"},[a("span",null,"安装")])],-1)),a("p",null,[e[1]||(e[1]=s("从 ")),a("a",u,[e[0]||(e[0]=s("docker-hub")),n(l)]),e[2]||(e[2]=s(" 镜像源中找到想要安装的版本号。"))]),e[8]||(e[8]=d(`<p>这里直接安装最新版本。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待一段时间安装完成后，启动 MySQL 容器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> mysql-container <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>my-secret-pw <span class="token parameter variable">-v</span> /path/to/data:/var/lib/mysql <span class="token parameter variable">-e</span> <span class="token assign-left variable">TZ</span><span class="token operator">=</span>Asia/Shanghai <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个命令的参数解释如下：</p><ul><li><code>-d</code>: 后台运行容器。</li><li><code>--name mysql-container</code>: 给容器起一个名字。</li><li><code>-e MYSQL_ROOT_PASSWORD=my-secret-pw</code>: 设置 MySQL root 用户的密码。</li><li><code>-p 3306:3306</code>: 将容器的 MySQL 服务端口（默认为 3306）映射到主机的 3306 端口。</li><li><code>-v /path/to/data:/var/lib/mysql</code>: 将容器中的 MySQL 数据目录挂载到主机上的 <code>/path/to/data</code> 目录。</li><li><code>-e TZ=Asia/Shanghai</code>: 设置时区。</li></ul><p>启动容器后进入 MySQL 容器的命令行界面：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql-container <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入密码即可进入 MySQL 命令行界面。</p><h2 id="设置-mysql" tabindex="-1"><a class="header-anchor" href="#设置-mysql"><span>设置 MySQL</span></a></h2><p>进入到命令行界面后，设置一些基本的配置。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>MySQL 命令以 <code>;</code> 表示一行结束。</p></div><ol><li>登陆 MySQL</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>创建数据库</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>create database your_data_base_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>创建用户</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>CREATE <span class="token environment constant">USER</span> <span class="token string">&#39;your_username&#39;</span>@<span class="token string">&#39;localhost&#39;</span> IDENTIFIED BY <span class="token string">&#39;your_password&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>设置权限</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>GRANT ALL PRIVILEGES ON your_database_name.* TO <span class="token string">&#39;your_username&#39;</span>@<span class="token string">&#39;localhost&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>刷新权限</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>FLUSH PRIVILEGES<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>必要步骤，否则权限会不生效。</p></div><p>做完基本的配置之后，就可以使用下面命令退出命令行界面：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">exit</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="服务器开放端口" tabindex="-1"><a class="header-anchor" href="#服务器开放端口"><span>服务器开放端口</span></a></h2>`,26)),a("p",null,[e[4]||(e[4]=s("参考 ")),n(i,{to:"/backend/linux/practice/01-set-the-ssh.html#%E6%B7%BB%E5%8A%A0%E5%AE%89%E5%85%A8%E7%BB%84%E8%A7%84%E5%88%99"},{default:c(()=>e[3]||(e[3]=[s("添加安全组规则")])),_:1,__:[3]}),e[5]||(e[5]=s("。"))]),e[9]||(e[9]=a("p",null,"接下来就可以使用 Navicat 连接数据库了。",-1))])}const g=r(m,[["render",b],["__file","01-install-mysql.html.vue"]]),y=JSON.parse('{"path":"/backend/database/mysql/01-install-mysql.html","title":"Docker 安装 MySQL","lang":"zh-CN","frontmatter":{"title":"Docker 安装 MySQL","date":"2024-01-14T00:00:00.000Z","icon":"install","category":["database"],"tag":["mysql","centos","docker"],"description":"使用 Docker 安装 MySQL。 安装 从 docker-hub 镜像源中找到想要安装的版本号。 这里直接安装最新版本。 等待一段时间安装完成后，启动 MySQL 容器： 这个命令的参数解释如下： -d: 后台运行容器。 --name mysql-container: 给容器起一个名字。 -e MYSQL_ROOT_PASSWORD=my-sec...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/backend/database/mysql/01-install-mysql.html"}],["meta",{"property":"og:title","content":"Docker 安装 MySQL"}],["meta",{"property":"og:description","content":"使用 Docker 安装 MySQL。 安装 从 docker-hub 镜像源中找到想要安装的版本号。 这里直接安装最新版本。 等待一段时间安装完成后，启动 MySQL 容器： 这个命令的参数解释如下： -d: 后台运行容器。 --name mysql-container: 给容器起一个名字。 -e MYSQL_ROOT_PASSWORD=my-sec..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-04T08:03:38.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"mysql"}],["meta",{"property":"article:tag","content":"centos"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2024-01-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-04T08:03:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 安装 MySQL\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-04T08:03:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"2 设置 MySQL","slug":"设置-mysql","link":"#设置-mysql","children":[]},{"level":2,"title":"3 服务器开放端口","slug":"服务器开放端口","link":"#服务器开放端口","children":[]}],"git":{"createdTime":1733207123000,"updatedTime":1733299418000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":3}]},"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"backend/database/mysql/01-install-mysql.md","localizedDate":"2024年1月14日","excerpt":"","autoDesc":true}');export{g as comp,y as data};
