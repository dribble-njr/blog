import{_ as p,c as i,a as s,e as o,d as e,b as t,r as l,o as r}from"./app-DeAcFSYJ.js";const c={},u={class:"hint-container tip"},d={href:"https://github.com/dribble-njr/vuepress-plugin-ordered-header",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.npmjs.com/package/vuepress-plugin-ordered-heade",target:"_blank",rel:"noopener noreferrer"},v={href:"https://v2.vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},m={class:"hint-container tip"},g={href:"https://v2.vuepress.vuejs.org/zh/advanced/architecture.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://v2.vuepress.vuejs.org/zh/reference/plugin-api.html#extendspage",target:"_blank",rel:"noopener noreferrer"},h={href:"https://v2.vuepress.vuejs.org/zh/reference/node-api.html#page-%E5%B1%9E%E6%80%A7",target:"_blank",rel:"noopener noreferrer"},f={href:"https://v2.vuepress.vuejs.org/zh/reference/node-api.html#headers",target:"_blank",rel:"noopener noreferrer"};function y(P,n){const a=l("ExternalLinkIcon");return r(),i("div",null,[s("div",u,[n[5]||(n[5]=s("p",{class:"hint-container-title"},"提示",-1)),s("p",null,[n[2]||(n[2]=e("该插件已经发布至：")),s("a",d,[n[0]||(n[0]=e("GitHub")),t(a)]),n[3]||(n[3]=e(" | ")),s("a",k,[n[1]||(n[1]=e("npm")),t(a)]),n[4]||(n[4]=e("。"))]),n[6]||(n[6]=s("p",null,"如有帮助可以点个 star 支持一下~。",-1))]),s("p",null,[s("a",v,[n[7]||(n[7]=e("VuePress")),t(a)]),n[8]||(n[8]=e(" 默认不支持生成有序目录，比如想要下面这种效果："))]),n[19]||(n[19]=o(`<div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> 标题 1</span>

<span class="token title important"><span class="token punctuation">##</span> 标题 1-1</span>

<span class="token title important"><span class="token punctuation">###</span> 标题 1-1-1</span>

<span class="token title important"><span class="token punctuation">##</span> 标题 1-2</span>

<span class="token title important"><span class="token punctuation">#</span> 标题 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目录将显示为：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>1 header 1

1.1 header 1-1

1.1.1 header 1-1-1

1.2 header 1-2

2 header 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>于是花了一点时间研究了 VuePress 的插件系统。</p><h2 id="vuepress-架构" tabindex="-1"><a class="header-anchor" href="#vuepress-架构"><span>VuePress 架构</span></a></h2>`,5)),s("div",m,[n[11]||(n[11]=s("p",{class:"hint-container-title"},"提示",-1)),s("p",null,[n[10]||(n[10]=e("以下内容来自 ")),s("a",g,[n[9]||(n[9]=e("VuePress - 架构")),t(a)])])]),n[20]||(n[20]=o('<h3 id="概览" tabindex="-1"><a class="header-anchor" href="#概览"><span>概览</span></a></h3><p>VuePress 的简要架构：</p><ul><li>Node App 会生成临时文件，包括页面、路由等。</li><li>Bundler 会将 Client App 和临时文件一起进行打包，就像处理一个普通的 Vue App 一样。</li></ul><p>VuePress 分为两个主要部分： Node App 和 Client App：</p><ul><li>插件或者主题的入口文件会在 Node App 中被加载。</li><li>客户端文件会在 Client App 中被加载，也就是会被 Bundler 处理。比如组件、客户端配置文件等。</li></ul><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240229181754.png" alt="架构" tabindex="0" loading="lazy"><figcaption>架构</figcaption></figure><h3 id="核心流程和-hooks" tabindex="-1"><a class="header-anchor" href="#核心流程和-hooks"><span>核心流程和 Hooks</span></a></h3><p>VuePress 的核心流程以及 插件 API 的 Hooks ：</p><ul><li>在 <code>init</code> 阶段： <ul><li>主题和插件会被加载。这意味着插件需要在初始化之前使用。</li><li>由于我们要使用 <code>markdown-it</code> 来解析 Markdown 文件，因此需要在加载页面文件之前创建 <code>markdown-it</code> 实例： <ul><li><code>extendsMarkdownOptions</code> Hook 会被调用，用以创建 <code>markdown-it</code> 实例。</li><li><code>extendsMarkdown</code> Hook 会被调用，用以扩展 <code>markdown-it</code> 实例。</li></ul></li><li>页面文件会被加载： <ul><li><code>extendsPageOptions</code> Hook 会被调用，用以创建页面。</li><li><code>extendsPage</code> Hook 会被调用，用以扩展页面对象。</li></ul></li></ul></li><li>在 <code>prepare</code> 阶段： <ul><li>临时文件会被生成，因此所有和客户端文件相关的 Hooks 会在此处调用。</li></ul></li><li>在 <code>dev / build</code> 阶段： <ul><li>Bundler 会被加载：</li><li><code>extendsBundlerOptions</code> Hook 会被调用，用以生成 Bundler 的配置。</li><li><code>alias</code> Hook 和 <code>define</code> Hook 会被用在 Bundler 的配置中，所以它们会在此处调用。</li></ul></li></ul><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240229181843.png" alt="核心流程和 Hooks" tabindex="0" loading="lazy"><figcaption>核心流程和 Hooks</figcaption></figure><h2 id="开发插件" tabindex="-1"><a class="header-anchor" href="#开发插件"><span>开发插件</span></a></h2><p>开发插件只需要导出一个插件对象，并在对应 Hooks 中实现自己想要的逻辑。</p>',12)),s("p",null,[n[15]||(n[15]=e("比如要实现有序标题，那么可以在 ")),s("a",b,[n[12]||(n[12]=s("code",null,"extendsPage",-1)),t(a)]),n[16]||(n[16]=e(" Hooks 中扩展 ")),s("a",h,[n[13]||(n[13]=s("code",null,"Page",-1)),t(a)]),n[17]||(n[17]=e(" 实例的 ")),s("a",f,[n[14]||(n[14]=s("code",null,"headers",-1)),t(a)]),n[18]||(n[18]=e(" 属性。"))]),n[21]||(n[21]=o(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>extendsPage</code>：</p><ul><li>类型： <code>(page: Page, app: App) =&gt; void | Promise&lt;void&gt;</code></li><li>详情：<br> 页面扩展。<br> 该 Hook 接收一个函数，在参数中会收到一个 Page 实例。<br> 该 Hook 可以用来在 <code>Page</code> 对象上添加额外的属性，或修改现有的属性等。<br> 值得一提的是，针对 <code>page.data</code> 和 <code>page.routeMeta</code> 的改动可以在客户端代码中使用。</li></ul></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-ordered-header&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">extendsPage</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 实现扩展逻辑</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实现功能" tabindex="-1"><a class="header-anchor" href="#实现功能"><span>实现功能</span></a></h2><p><code>headers: PageHeader[]</code> 数据结构如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PageHeader</span> <span class="token punctuation">{</span>
  level<span class="token operator">:</span> <span class="token builtin">number</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span>
  slug<span class="token operator">:</span> <span class="token builtin">string</span>
  children<span class="token operator">:</span> PageHeader<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个标题下的子标题会被放入 <code>children</code> 数组，因此需要利用递归实现。</p><ol><li>首先初始化一个计数数组 <code>counter</code>，代表 <code>h1</code> ~ <code>h6</code> 6 个标题层级。</li><li>在每个标题层级上，首先将对应的层级计数器加一（即 <code>counter[level] = (counter[level] || 0) + 1</code>）。</li><li>然后对于比当前层级更深的计数器（即该标题的子标题）进行重置（即 counter[i] = undefined）。</li><li>再利用 <code>counter</code> 数组给标题增加序号。</li><li>最后返回处理好的 <code>page</code> 对象。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-ordered-header&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">extendsPage</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>

      <span class="token keyword">const</span> <span class="token function-variable function">reorderHeaders</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">headers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        headers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">header</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> level <span class="token operator">=</span> header<span class="token punctuation">.</span>level <span class="token operator">-</span> <span class="token number">1</span>

          counter<span class="token punctuation">[</span>level<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>counter<span class="token punctuation">[</span>level<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>

          <span class="token comment">// reset level</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> level <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> counter<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            counter<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
          <span class="token punctuation">}</span>

          header<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>counter<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>header<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

          <span class="token keyword">if</span> <span class="token punctuation">(</span>header<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token function">reorderHeaders</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token function">reorderHeaders</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>

      <span class="token keyword">return</span> page
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8))])}const w=p(c,[["render",y],["__file","01.vuepress-plugin-ordered-header.html.vue"]]),x=JSON.parse('{"path":"/project/plugin/01.vuepress-plugin-ordered-header.html","title":"Vuepress Plugin Ordered Header","lang":"zh-CN","frontmatter":{"title":"Vuepress Plugin Ordered Header","date":"2024-02-19T00:00:00.000Z","icon":"vuepress","category":["Project"],"tag":["openai","langchain"],"description":" 提示 该插件已经发布至：GitHub | npm。 如有帮助可以点个 star 支持一下~。 VuePress 默认不支持生成有序目录，比如想要下面这种效果： 目录将显示为： 于是花了一点时间研究了 VuePress 的插件系统。 VuePress 架构 提示 以下内容来自 VuePress - 架构 概览 VuePress 的简要架构： Node ...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/project/plugin/01.vuepress-plugin-ordered-header.html"}],["meta",{"property":"og:title","content":"Vuepress Plugin Ordered Header"}],["meta",{"property":"og:description","content":" 提示 该插件已经发布至：GitHub | npm。 如有帮助可以点个 star 支持一下~。 VuePress 默认不支持生成有序目录，比如想要下面这种效果： 目录将显示为： 于是花了一点时间研究了 VuePress 的插件系统。 VuePress 架构 提示 以下内容来自 VuePress - 架构 概览 VuePress 的简要架构： Node ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240229181754.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Vuepress Plugin Ordered Header"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"openai"}],["meta",{"property":"article:tag","content":"langchain"}],["meta",{"property":"article:published_time","content":"2024-02-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vuepress Plugin Ordered Header\\",\\"image\\":[\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240229181754.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240229181843.png\\"],\\"datePublished\\":\\"2024-02-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 VuePress 架构","slug":"vuepress-架构","link":"#vuepress-架构","children":[{"level":3,"title":"1.1 概览","slug":"概览","link":"#概览","children":[]},{"level":3,"title":"1.2 核心流程和 Hooks","slug":"核心流程和-hooks","link":"#核心流程和-hooks","children":[]}]},{"level":2,"title":"2 开发插件","slug":"开发插件","link":"#开发插件","children":[]},{"level":2,"title":"3 实现功能","slug":"实现功能","link":"#实现功能","children":[]}],"git":{"createdTime":1709205461000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":2}]},"readingTime":{"minutes":3.05,"words":914},"filePathRelative":"project/plugin/01.vuepress-plugin-ordered-header.md","localizedDate":"2024年2月19日","excerpt":"","autoDesc":true}');export{w as comp,x as data};
