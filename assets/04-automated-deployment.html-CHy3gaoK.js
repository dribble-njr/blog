import{_ as d,c as p,e as i,a as e,d as s,b as a,w as o,r,o as c}from"./app-DjBUyNfp.js";const m={},u={class:"hint-container tip"},v={href:"https://git-scm.com/docs",target:"_blank",rel:"noopener noreferrer"},b={href:"http://chanwingwah.info/article/604eb2273c8ec67668f6fd41",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.imqianduan.com/git-svn/335.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://hjxlog.com/posts/20191130a1.html#7-%E9%85%8D%E7%BD%AENginx",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.cnblogs.com/yongdaimi/p/15247771.html",target:"_blank",rel:"noopener noreferrer"};function f(x,n){const l=r("RouteLink"),t=r("ExternalLinkIcon");return c(),p("div",null,[n[21]||(n[21]=i('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>服务器：centos 7.9</p><p>本地电脑：Windows 10</p></div><h2 id="服务器端" tabindex="-1"><a class="header-anchor" href="#服务器端"><span>服务器端</span></a></h2><h3 id="配置-nginx" tabindex="-1"><a class="header-anchor" href="#配置-nginx"><span>配置 nginx</span></a></h3>',3)),e("p",null,[n[1]||(n[1]=s("登录宝塔面板，可以参考 ")),a(l,{to:"/backend/linux/practice/0003%E3%80%81%E9%85%8D%E7%BD%AE%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF.html"},{default:o(()=>n[0]||(n[0]=[s("配置宝塔面板")])),_:1,__:[0]}),n[2]||(n[2]=s("。点击左侧网站 -> 添加站点。"))]),n[22]||(n[22]=e("figure",null,[e("img",{src:"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step1-add-site.png",alt:"step1-add-site",tabindex:"0",loading:"lazy"}),e("figcaption",null,"step1-add-site")],-1)),e("p",null,[n[4]||(n[4]=s("新增之后，点击设置 -> 配置文件。这三项按自己的情况配置，在后面 ")),a(l,{to:"/backend/linux/practice/004-automated-deployment.html#%E9%85%8D%E7%BD%AE-hooks"},{default:o(()=>n[3]||(n[3]=[s("git hooks")])),_:1,__:[3]}),n[5]||(n[5]=s(" 中会将 dist 文件推送到 ")),n[6]||(n[6]=e("code",null,"root",-1)),n[7]||(n[7]=s(" 配置项设置的文件夹下。"))]),n[23]||(n[23]=i(`<figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step2-nginx-conf.png" alt="step2-nginx-conf" tabindex="0" loading="lazy"><figcaption>step2-nginx-conf</figcaption></figure><p>先测试下 nginx 有没有配置成功，本地打包文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">yarn</span> build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后将生成的 <code>dist</code> 文件里的内容复制到刚才设置的项目根目录下。</p><p>接着输入 <code>http://xxx.xxx.xxx.xxx:端口号</code>，就能访问成功了。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>地址得用 http 协议，因为我们还没有配置 ssl 证书。</p></div><h3 id="配置-git-仓库" tabindex="-1"><a class="header-anchor" href="#配置-git-仓库"><span>配置 git 仓库</span></a></h3>`,7)),e("p",null,[n[9]||(n[9]=s("在 ")),a(l,{to:"/backend/linux/practice/002-build-git-server.html"},{default:o(()=>n[8]||(n[8]=[s("搭建 git 私服")])),_:1,__:[8]}),n[10]||(n[10]=s(" 中已经搭建好了 git 私服，因此只需要初始化 ")),n[11]||(n[11]=e("code",null,"vuepress.git",-1)),n[12]||(n[12]=s(" 仓库即可。"))]),n[24]||(n[24]=i(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home/git
<span class="token function">mkdir</span> vuepress.git
<span class="token builtin class-name">cd</span> vuepress.git
<span class="token function">git</span> init <span class="token parameter variable">--bare</span> vuepress.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置-hooks" tabindex="-1"><a class="header-anchor" href="#配置-hooks"><span>配置 hooks</span></a></h3><p>先切换到 root 用户（<code>ctrl + d</code>），在 home 文件夹下创建一个临时存放 dist 文件夹的地方。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>我这里选择存放到 home 文件夹下，但是 git 用户是没有权限的，因此切换到 root 用户，也可以存放到其他文件夹。</p></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home
<span class="token function">mkdir</span> tmp
<span class="token builtin class-name">cd</span> tmp
<span class="token function">mkdir</span> vuepress
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着将文件的所有权换成 git：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chown</span> git:git <span class="token parameter variable">-R</span> vuepress
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后，有一个关键的地方，要将 <code>/www/wwwroot</code> 的所有权换成 git：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chown</span> git:git /www/wwwroot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>做好这些准备之后，就可以开始配置 <code>hooks</code> 了。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home/git/vuepress.git/hooks
<span class="token comment"># 通过 copy 新建 post-update 文件</span>
<span class="token function">cp</span> post-update.sample post-update
<span class="token function">vim</span> post-update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着将下面代码复制进去：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;auto deploy start ===================================&quot;</span>
<span class="token builtin class-name">unset</span> GIT_DIR

<span class="token comment"># 项目文件夹</span>
<span class="token assign-left variable">PUBLIC_WWW</span><span class="token operator">=</span>/www/wwwroot/vuepress
<span class="token comment"># git 仓库文件夹</span>
<span class="token assign-left variable">GIT_REPO</span><span class="token operator">=</span>/home/git/vuepress.git
<span class="token comment"># 临时文件夹</span>
<span class="token assign-left variable">TMP_GIT_CLONE</span><span class="token operator">=</span>/home/tmp/vuepress

<span class="token comment"># 移除临时文件夹</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">\${TMP_GIT_CLONE}</span>
<span class="token comment"># 克隆 git 仓库到临时文件夹</span>
<span class="token function">git</span> clone <span class="token variable">$GIT_REPO</span> <span class="token variable">$TMP_GIT_CLONE</span>
<span class="token comment"># 移除项目文件夹</span>
<span class="token comment"># 宝塔为了安全，为自动在项目文件夹下新增 .user.ini 文件</span>
<span class="token comment"># 需要先关闭这个文件的功能才能删除项目文件夹</span>
<span class="token builtin class-name">cd</span> <span class="token variable">\${PUBLIC_WWW}</span>
chattr <span class="token parameter variable">-i</span> .user.ini
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">\${PUBLIC_WWW}</span>
<span class="token comment"># 将临时文件夹复制到项目文件夹</span>
<span class="token function">cp</span> <span class="token parameter variable">-rf</span> <span class="token variable">\${TMP_GIT_CLONE}</span> <span class="token variable">\${PUBLIC_WWW}</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;auto deploy end ====================================&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在服务器端的准备工作已经完成了，接下来看看本地电脑的配置。</p><h2 id="本地电脑" tabindex="-1"><a class="header-anchor" href="#本地电脑"><span>本地电脑</span></a></h2><p>在本地项目根目录下新建 <code>deploy.sh</code> 脚本文件，内容如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env sh</span>

<span class="token comment"># 确保脚本抛出遇到的错误</span>
<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>

<span class="token comment"># 生成静态文件</span>
<span class="token function">yarn</span> build

<span class="token comment"># 进入生成的文件夹</span>
<span class="token builtin class-name">cd</span> docs/.vuepress/dist

<span class="token comment"># 初始化 git 仓库，并提交修改</span>
<span class="token function">git</span> init
<span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&#39;deploy&#39;</span>

<span class="token comment"># 发布到 git 私服， -f 强制覆盖</span>
<span class="token function">git</span> remote <span class="token function">add</span> origin git@119.23.65.118:/home/git/vuepress.git
<span class="token function">git</span> push <span class="token parameter variable">-f</span> git@119.23.65.118:/home/git/vuepress.git master

<span class="token builtin class-name">cd</span> -
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17)),e("div",u,[n[16]||(n[16]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[n[14]||(n[14]=s("了解更多 git 命令，可以查询")),e("a",v,[n[13]||(n[13]=s("官方文档")),a(t)]),n[15]||(n[15]=s("。"))])]),n[25]||(n[25]=i(`<h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><p>vscode 终端中输入 <code>sh depoly.sh</code>，报错：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token builtin class-name">:</span> 无法将“sh”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。
请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>了解到 windows 上可以使用 git bash 执行 shell 脚本，但我可不想每次执行的时候都打开 git bash，当然得找如何在 vscode 中执行 shell 脚本的办法。</p><ol><li>首先得在 vscode 中安装 code runner，之前一直用它来调试力扣上的题，已经安装过了。</li><li>安装 git bash，这个不用说，安装 git 的时候就已经有了</li><li>配置 bash 环境，找到 bash.exe 的安装目录，将它的位置添加到系统的环境变量中。</li><li>配置 code runner：文件 -&gt; 首选项 -&gt; 设置 -&gt; 搜索 code runner</li><li>打开终端，输入 <code>bash</code> 切换到 bash 环境，点击右上角的三角形即可运行。</li></ol><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step3-code-runner.png" alt="step3-code-runner" tabindex="0" loading="lazy"><figcaption>step3-code-runner</figcaption></figure><p>现在随便更新点内容，并执行 <code>deploy.sh</code> 脚本：</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step4-complete.png" alt="step4-complete" tabindex="0" loading="lazy"><figcaption>step4-complete</figcaption></figure><p>再次访问 <code>http://xxx.xxx.xxx.xxx:端口号</code> 发现已经更新了。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h2>`,10)),e("ul",null,[e("li",null,[e("a",b,[n[17]||(n[17]=s("只需三步， 部署 Vuepress 并实现本地一行命令更新部署到服务器")),a(t)])]),e("li",null,[e("a",g,[n[18]||(n[18]=s("使用 git hooks(post-receive)实现简单的远程自动部署")),a(t)])]),e("li",null,[e("a",h,[n[19]||(n[19]=s("将 Hexo 部署到阿里云轻量服务器（保姆级教程）")),a(t)])]),e("li",null,[e("a",k,[n[20]||(n[20]=s("VSCode: Windows 下配置 VSCode 运行 shell")),a(t)])])])])}const y=d(m,[["render",f],["__file","04-automated-deployment.html.vue"]]),j=JSON.parse('{"path":"/backend/linux/practice/04-automated-deployment.html","title":"自动部署 Vuepress 到服务器","lang":"zh-CN","frontmatter":{"title":"自动部署 Vuepress 到服务器","date":"2021-05-12T00:00:00.000Z","icon":"vuepress","category":["linux"],"tag":["项目部署","vuepress"],"description":" 提示 服务器：centos 7.9 本地电脑：Windows 10 服务器端 配置 nginx 登录宝塔面板，可以参考 。点击左侧网站 -> 添加站点。 step1-add-sitestep1-add-site 新增之后，点击设置 -> 配置文件。这三项按自己的情况配置，在后面 中会将 dist 文件推送到 root 配置项设置的文件夹下。 step...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/backend/linux/practice/04-automated-deployment.html"}],["meta",{"property":"og:title","content":"自动部署 Vuepress 到服务器"}],["meta",{"property":"og:description","content":" 提示 服务器：centos 7.9 本地电脑：Windows 10 服务器端 配置 nginx 登录宝塔面板，可以参考 。点击左侧网站 -> 添加站点。 step1-add-sitestep1-add-site 新增之后，点击设置 -> 配置文件。这三项按自己的情况配置，在后面 中会将 dist 文件推送到 root 配置项设置的文件夹下。 step..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step1-add-site.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-03T06:25:23.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"自动部署 Vuepress 到服务器"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"项目部署"}],["meta",{"property":"article:tag","content":"vuepress"}],["meta",{"property":"article:published_time","content":"2021-05-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-03T06:25:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自动部署 Vuepress 到服务器\\",\\"image\\":[\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step1-add-site.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step2-nginx-conf.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step3-code-runner.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/step4-complete.png\\"],\\"datePublished\\":\\"2021-05-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-03T06:25:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 服务器端","slug":"服务器端","link":"#服务器端","children":[{"level":3,"title":"1.1 配置 nginx","slug":"配置-nginx","link":"#配置-nginx","children":[]},{"level":3,"title":"1.2 配置 git 仓库","slug":"配置-git-仓库","link":"#配置-git-仓库","children":[]},{"level":3,"title":"1.3 配置 hooks","slug":"配置-hooks","link":"#配置-hooks","children":[]}]},{"level":2,"title":"2 本地电脑","slug":"本地电脑","link":"#本地电脑","children":[]},{"level":2,"title":"3 测试","slug":"测试","link":"#测试","children":[]},{"level":2,"title":"4 参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1733207123000,"updatedTime":1733207123000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":1}]},"readingTime":{"minutes":3.73,"words":1118},"filePathRelative":"backend/linux/practice/04-automated-deployment.md","localizedDate":"2021年5月12日","excerpt":"","autoDesc":true}');export{y as comp,j as data};
