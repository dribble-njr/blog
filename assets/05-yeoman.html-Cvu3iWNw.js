import{_ as s,c as r,a as n,e as o,d as a,b as i,r as l,o as d}from"./app-DjBUyNfp.js";const p={},c={class:"hint-container warning"},m={href:"https://github.com/yeoman/generator-generator/issues/258",target:"_blank",rel:"noopener noreferrer"},u={class:"hint-container info"},g={href:"https://yeoman.io/generators/",target:"_blank",rel:"noopener noreferrer"};function h(b,e){const t=l("ExternalLinkIcon");return d(),r("div",null,[n("div",c,[e[6]||(e[6]=n("p",{class:"hint-container-title"},"注意",-1)),n("p",null,[e[1]||(e[1]=n("code",null,"yo@5.0.0",-1)),e[2]||(e[2]=a(" 引入了一个破坏性的更新，会导致 ")),n("a",m,[e[0]||(e[0]=a("instantiatedGenerator.run is not a function")),i(t)]),e[3]||(e[3]=a("，需要降级到 ")),e[4]||(e[4]=n("code",null,"@4.x",-1)),e[5]||(e[5]=a("。"))]),e[7]||(e[7]=n("p",null,[a("降级后仍有报错，可能是 "),n("code",null,"generator-node"),a(" 的问题，不再推荐使用。")],-1))]),e[12]||(e[12]=o(`<p>Yeoman 是一个通用的脚手架系统，允许创建任何类型的应用程序。它可以快速启动新项目，并简化现有项目的维护工作。</p><p>Yeoman 与语言无关。它可以生成任何语言（Web、Java、Python、C# 等）的项目。</p><p>Yeoman 本身不做任何决定。所有决定都由生成器做出，而生成器基本上就是 Yeoman 环境中的插件。有很多公开可用的生成器，创建一个新的生成器来匹配任何工作流程也很容易。Yeoman 始终是满足脚手架需求的正确选择。</p><p>以下是一些常见的使用案例：</p><ul><li>快速创建新项目</li><li>创建项目的新部分，如带有单元测试的新控制器</li><li>创建模块或软件包</li><li>引导新服务</li><li>执行标准、最佳实践和风格指南</li><li>通过让用户使用示例应用程序来推广新项目</li><li>...</li></ul><h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始"><span>开始</span></a></h2><p><code>yo</code> 是一款 Yeoman 命令行实用程序，允许使用脚手架模板（简称为生成器）创建项目。使用 npm 安装 <code>yo</code> 和生成器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> yo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后可以安装一些生成器：</p>`,9)),n("div",u,[e[11]||(e[11]=n("p",{class:"hint-container-title"},"相关信息",-1)),n("p",null,[e[9]||(e[9]=a("可以在 ")),n("a",g,[e[8]||(e[8]=a("生成器")),i(t)]),e[10]||(e[10]=a(" 中搜索想要的生成器。"))])]),e[13]||(e[13]=o(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> generator-node
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="基本脚手架" tabindex="-1"><a class="header-anchor" href="#基本脚手架"><span>基本脚手架</span></a></h2><p>搭建基本脚手架，只需要去除生成器前缀 <code>generator-</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yo <span class="token function">node</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>大多数生成器会提出一系列问题来定制新项目。要查看哪些选项可用，请使用 <code>help</code> 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yo <span class="token function">node</span> <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>很多生成器都依赖于构建系统（如 Grunt 或 Gulp）和软件包管理器（如 npm 和 Bower）。请务必访问生成器的网站，了解运行和维护新应用程序的相关信息。运行以下命令即可轻松访问生成器的主页：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> home generator-node
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为复杂框架搭建脚手架的生成器可能会提供额外的生成器，为项目的较小部分搭建脚手架。这些生成器通常被称为子生成器，访问方式为 <code>generator:sub-generator</code>。</p><p>以 <code>generator-node</code> 为例。一旦生成了完整的 node 应用程序，就可以添加其他功能。要在项目中添加新控制器，请运行控制器子生成器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yo node:cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="其他-yo-命令" tabindex="-1"><a class="header-anchor" href="#其他-yo-命令"><span>其他 yo 命令</span></a></h2><p>除了上一节介绍的基础知识，<code>yo</code> 还是一个完全交互式的工具。只需在终端键入 <code>yo</code>，就能看到一系列选项，用于管理与生成器有关的一切：运行、更新、安装、帮助和其他实用程序。</p><p><code>yo</code> 还提供以下命令。</p><ul><li><code>yo --help</code> 访问完整的帮助界面</li><li><code>yo --generators</code> 列出所有已安装的生成器</li><li><code>yo --version</code> 获取版本</li></ul><h2 id="故障排除" tabindex="-1"><a class="header-anchor" href="#故障排除"><span>故障排除</span></a></h2><p>大多数问题都可以通过运行：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yo doctor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>doctor</code> 命令将诊断并提供解决最常见问题的步骤。</p>`,19))])}const y=s(p,[["render",h],["__file","05-yeoman.html.vue"]]),f=JSON.parse('{"path":"/frontend/engineering/basic/05-yeoman.html","title":"yeoman 基础使用","lang":"zh-CN","frontmatter":{"title":"yeoman 基础使用","date":"2024-01-09T00:00:00.000Z","icon":"yeoman","category":["工程化"],"tag":["frontend","cli","yeoman","deprecated"],"description":" 注意 yo@5.0.0 引入了一个破坏性的更新，会导致 instantiatedGenerator.run is not a function，需要降级到 @4.x。 降级后仍有报错，可能是 generator-node 的问题，不再推荐使用。 Yeoman 是一个通用的脚手架系统，允许创建任何类型的应用程序。它可以快速启动新项目，并简化现有项目的维...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/engineering/basic/05-yeoman.html"}],["meta",{"property":"og:title","content":"yeoman 基础使用"}],["meta",{"property":"og:description","content":" 注意 yo@5.0.0 引入了一个破坏性的更新，会导致 instantiatedGenerator.run is not a function，需要降级到 @4.x。 降级后仍有报错，可能是 generator-node 的问题，不再推荐使用。 Yeoman 是一个通用的脚手架系统，允许创建任何类型的应用程序。它可以快速启动新项目，并简化现有项目的维..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:tag","content":"cli"}],["meta",{"property":"article:tag","content":"yeoman"}],["meta",{"property":"article:tag","content":"deprecated"}],["meta",{"property":"article:published_time","content":"2024-01-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"yeoman 基础使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 开始","slug":"开始","link":"#开始","children":[]},{"level":2,"title":"2 基本脚手架","slug":"基本脚手架","link":"#基本脚手架","children":[]},{"level":2,"title":"3 其他 yo 命令","slug":"其他-yo-命令","link":"#其他-yo-命令","children":[]},{"level":2,"title":"4 故障排除","slug":"故障排除","link":"#故障排除","children":[]}],"git":{"createdTime":1730805009000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":2}]},"readingTime":{"minutes":2.67,"words":802},"filePathRelative":"frontend/engineering/basic/05-yeoman.md","localizedDate":"2024年1月9日","excerpt":"","autoDesc":true}');export{y as comp,f as data};
