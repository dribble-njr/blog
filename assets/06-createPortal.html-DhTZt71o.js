import{_ as e,c as p,e as o,a,d as s,b as c,r as l,o as i}from"./app-DjBUyNfp.js";const u={},r={href:"https://react.dev/reference/react-dom/createPortal",target:"_blank",rel:"noopener noreferrer"};function k(d,n){const t=l("ExternalLinkIcon");return i(),p("div",null,[n[3]||(n[3]=o(`<p>有一些场景下，需要将组件渲染在正常的文档流外部，比如一个模态框，需要渲染在 <code>body</code> 元素的顶部。</p><p>你可以通过 <code>useEffect</code> 来创建一个 DOM 节点，并将其添加到文档中，然后在组件卸载时将其删除。但是，这个模式非常常见，React 提供了一个内置的方法来实现这个功能，那就是 <code>ReactDOM.createPortal</code>。</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPortal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>

<span class="token keyword">function</span> <span class="token function">Modal</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	title<span class="token punctuation">,</span>
	content<span class="token punctuation">,</span>
	handleClose<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	title<span class="token operator">:</span> <span class="token builtin">string</span>
	content<span class="token operator">:</span> <span class="token builtin">string</span>
	<span class="token function-variable function">handleClose</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">createPortal</span><span class="token punctuation">(</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>content<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
		document<span class="token punctuation">.</span>body<span class="token punctuation">,</span>
	<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token punctuation">[</span>showModal<span class="token punctuation">,</span> setShowModal<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setShowModal</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Show Modal</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token punctuation">{</span>showModal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span>
					<span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>My Modal<span class="token punctuation">&quot;</span></span>
					<span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>This is the content of the modal<span class="token punctuation">&quot;</span></span>
					<span class="token attr-name">handleClose</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setShowModal</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
				<span class="token punctuation">/&gt;</span></span>
			<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>createPortal</code> 接收两个参数：</p><ul><li>第一个参数是你要渲染的 UI，它有访问 props、state 等的能力。</li><li>第二个参数是你要渲染到的 DOM 节点。</li></ul><p>在这个例子中，我们把模态框渲染到了 <code>body</code> 元素。</p>`,6)),a("ul",null,[a("li",null,[a("a",r,[n[0]||(n[0]=s("the ")),n[1]||(n[1]=a("code",null,"createPortal",-1)),n[2]||(n[2]=s(" docs")),c(t)])])])])}const v=e(u,[["render",k],["__file","06-createPortal.html.vue"]]),b=JSON.parse('{"path":"/frontend/framework/react/06-createPortal.html","title":"Portals","lang":"zh-CN","frontmatter":{"title":"Portals","date":"2025-07-16T00:00:00.000Z","tags":["react"],"description":"有一些场景下，需要将组件渲染在正常的文档流外部，比如一个模态框，需要渲染在 body 元素的顶部。 你可以通过 useEffect 来创建一个 DOM 节点，并将其添加到文档中，然后在组件卸载时将其删除。但是，这个模式非常常见，React 提供了一个内置的方法来实现这个功能，那就是 ReactDOM.createPortal。 createPortal...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/framework/react/06-createPortal.html"}],["meta",{"property":"og:title","content":"Portals"}],["meta",{"property":"og:description","content":"有一些场景下，需要将组件渲染在正常的文档流外部，比如一个模态框，需要渲染在 body 元素的顶部。 你可以通过 useEffect 来创建一个 DOM 节点，并将其添加到文档中，然后在组件卸载时将其删除。但是，这个模式非常常见，React 提供了一个内置的方法来实现这个功能，那就是 ReactDOM.createPortal。 createPortal..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-16T09:19:21.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:published_time","content":"2025-07-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T09:19:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Portals\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-07-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-16T09:19:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[],"git":{"createdTime":1752657561000,"updatedTime":1752657561000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":1}]},"readingTime":{"minutes":0.84,"words":252},"filePathRelative":"frontend/framework/react/06-createPortal.md","localizedDate":"2025年7月16日","excerpt":"","autoDesc":true}');export{v as comp,b as data};
