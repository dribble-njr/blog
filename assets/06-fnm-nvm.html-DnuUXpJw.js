import{_ as o,c as i,a as s,e as t,d as a,b as l,r as d,o as c}from"./app-nKKmHBUX.js";const r={},p={href:"https://github.com/Schniz/fnm",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"},m={class:"hint-container tip"},u={href:"https://github.com/Schniz/fnm/blob/master/docs/configuration.md",target:"_blank",rel:"noopener noreferrer"};function h(b,n){const e=d("ExternalLinkIcon");return c(),i("div",null,[s("p",null,[n[2]||(n[2]=a("在管理多个 Node.js 项目（每个项目都可能需要不同的 Node 版本）时，可靠的版本管理器可以简化您的工作流程。 两种流行的选择是 ")),s("a",p,[n[0]||(n[0]=a("fnm（Fast Node Manager）")),l(e)]),n[3]||(n[3]=a(" 和 ")),s("a",v,[n[1]||(n[1]=a("nvm（Node Version Manager）")),l(e)]),n[4]||(n[4]=a("。本文从性能、功能、安装简便性、使用和兼容性等方面对 ")),n[5]||(n[5]=s("code",null,"fnm",-1)),n[6]||(n[6]=a(" 和 ")),n[7]||(n[7]=s("code",null,"nvm",-1)),n[8]||(n[8]=a(" 进行了比较，帮助你选择最适合自己开发需求的版本管理器。"))]),n[15]||(n[15]=t(`<h2 id="fnm-和-nvm-简介" tabindex="-1"><a class="header-anchor" href="#fnm-和-nvm-简介"><span>fnm 和 nvm 简介</span></a></h2><p><code>nvm</code>：作为最广泛使用的 Node.js 版本管理器，<code>nvm</code> 提供了可靠的 Node.js 版本管理。它用 Bash 编写，适用于类 UNIX 环境（如 macOS 和 Linux），也可以通过兼容的 shell（如 WSL）在 Windows 上使用。</p><p><code>fnm</code>：<code>fnm</code> 是一种较新的、快速的替代方案，由 Rust 编写，以其速度闻名。<code>fnm</code> 支持多线程，因此在安装和切换 Node 版本时特别快。它还提供跨平台支持，包括 WSL、macOS 和 Windows。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h3 id="nvm" tabindex="-1"><a class="header-anchor" href="#nvm"><span><code>nvm</code></span></a></h3><p>要安装 <code>nvm</code>，在 UNIX 系统或 Windows 的 WSL 上运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh <span class="token operator">|</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 <code>wget</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh <span class="token operator">|</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完成之后，在 <code>~/.bashrc</code> 或 <code>~/.zshrc</code> 中添加以下内容：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">NVM_DIR</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">\${XDG_CONFIG_HOME-}</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">printf</span> %s <span class="token string">&quot;<span class="token variable">\${<span class="token environment constant">HOME</span>}</span>/.nvm&quot;</span> <span class="token operator">||</span> <span class="token builtin class-name">printf</span> %s <span class="token string">&quot;<span class="token variable">\${XDG_CONFIG_HOME}</span>/nvm&quot;</span><span class="token variable">)</span></span>&quot;</span>
<span class="token punctuation">[</span> <span class="token parameter variable">-s</span> <span class="token string">&quot;<span class="token variable">$NVM_DIR</span>/nvm.sh&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>. <span class="token string">&quot;<span class="token variable">$NVM_DIR</span>/nvm.sh&quot;</span> <span class="token comment"># This loads nvm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>重启终端或运行 <code>source ~/.bashrc</code> 或 <code>source ~/.zshrc</code> 使配置生效，然后检查 <code>nvm</code> 是否安装成功：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nvm <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="fnm" tabindex="-1"><a class="header-anchor" href="#fnm"><span><code>fnm</code></span></a></h3><p>在 UNIX 系统上，可以运行脚本或使用 <code>homebrew</code> 安装 <code>fnm</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 运行脚本安装</span>
<span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://fnm.vercel.app/install <span class="token operator">|</span> <span class="token function">bash</span>

<span class="token comment"># 或使用 homebrew 安装</span>
brew <span class="token function">install</span> fnm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Windows 上，可以使用 PowerShell 安装 <code>fnm</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>winget <span class="token function">install</span> Schniz.fnm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完成后，需要设置环境变量。</p><h4 id="bashrc" tabindex="-1"><a class="header-anchor" href="#bashrc"><span><code>~/.bashrc</code>：</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">eval</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>fnm <span class="token function">env</span> --use-on-cd <span class="token parameter variable">--shell</span> <span class="token function">bash</span><span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="zshrc" tabindex="-1"><a class="header-anchor" href="#zshrc"><span><code>~/.zshrc</code>：</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">eval</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>fnm <span class="token function">env</span> --use-on-cd <span class="token parameter variable">--shell</span> <span class="token function">zsh</span><span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="powershell" tabindex="-1"><a class="header-anchor" href="#powershell"><span><code>PowerShell</code>：</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>fnm <span class="token function">env</span> --use-on-cd <span class="token parameter variable">--shell</span> powershell <span class="token operator">|</span> Out-String <span class="token operator">|</span> Invoke-Expression
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启终端使配置生效，然后检查 <code>fnm</code> 是否安装成功：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>fnm <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="nvm-1" tabindex="-1"><a class="header-anchor" href="#nvm-1"><span><code>nvm</code></span></a></h3><h4 id="安装-node-js-版本" tabindex="-1"><a class="header-anchor" href="#安装-node-js-版本"><span>安装 Node.js 版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nvm <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="切换-node-js-版本" tabindex="-1"><a class="header-anchor" href="#切换-node-js-版本"><span>切换 Node.js 版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nvm use <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="设置默认-node-js-版本" tabindex="-1"><a class="header-anchor" href="#设置默认-node-js-版本"><span>设置默认 Node.js 版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nvm <span class="token builtin class-name">alias</span> default <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="列出所有已安装的-node-js-版本" tabindex="-1"><a class="header-anchor" href="#列出所有已安装的-node-js-版本"><span>列出所有已安装的 Node.js 版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nvm <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="自动切换版本" tabindex="-1"><a class="header-anchor" href="#自动切换版本"><span>自动切换版本</span></a></h4><p><code>nvm</code> 默认没有支持根据 <code>.nvmrc</code> 文件自动切换版本，需要在 <code>~/.bashrc</code> 或 <code>~/.zshrc</code> 中添加以下内容：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 自动使用 .nvmrc 文件中定义的 Node 版本</span>
<span class="token function-name function">auto_nvm_use</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment"># 如果存在 .nvmrc 文件，则切换到该文件指定的版本</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;.nvmrc&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">local</span> nvmrc_version
    <span class="token assign-left variable">nvmrc_version</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token operator">&lt;</span>.nvmrc<span class="token variable">)</span></span>
    <span class="token comment"># 检查当前版本是否与 .nvmrc 中的版本不同</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>nvm version<span class="token variable">)</span></span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;v<span class="token variable">$nvmrc_version</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
      nvm use <span class="token string">&quot;<span class="token variable">$nvmrc_version</span>&quot;</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;NVM: Version <span class="token variable">$nvmrc_version</span> specified in .nvmrc is not installed.&quot;</span>
    <span class="token keyword">fi</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token comment"># 针对 Bash 的目录切换钩子</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token environment constant">$BASH_VERSION</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token assign-left variable">PROMPT_COMMAND</span><span class="token operator">=</span><span class="token string">&quot;auto_nvm_use;<span class="token variable">$PROMPT_COMMAND</span>&quot;</span>
<span class="token keyword">fi</span>

<span class="token comment"># 针对 Zsh 的目录切换钩子</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token variable">$ZSH_VERSION</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  autoload <span class="token parameter variable">-U</span> add-zsh-hook
  add-zsh-hook chpwd auto_nvm_use
  auto_nvm_use  <span class="token comment"># 立即执行一次，适配启动后的初始目录</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时，如果想要支持递归查找版本文件，也需要自己实现。</p><h3 id="fnm-1" tabindex="-1"><a class="header-anchor" href="#fnm-1"><span><code>fnm</code></span></a></h3><h4 id="安装-node-js-版本-1" tabindex="-1"><a class="header-anchor" href="#安装-node-js-版本-1"><span>安装 Node.js 版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>fnm <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="切换-node-js-版本-1" tabindex="-1"><a class="header-anchor" href="#切换-node-js-版本-1"><span>切换 Node.js 版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>fnm use <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="设置默认-node-js-版本-1" tabindex="-1"><a class="header-anchor" href="#设置默认-node-js-版本-1"><span>设置默认 Node.js 版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>fnm <span class="token builtin class-name">alias</span> default <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="列出所有已安装的-node-js-版本-1" tabindex="-1"><a class="header-anchor" href="#列出所有已安装的-node-js-版本-1"><span>列出所有已安装的 Node.js 版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>fnm <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="自动切换版本-1" tabindex="-1"><a class="header-anchor" href="#自动切换版本-1"><span>自动切换版本</span></a></h4><p><code>fnm</code> 默认支持根据 <code>.nvmrc</code>、<code>.node-version</code> 或 <code>packages.json#engines#node</code>（如果 <code>--resolve-engines</code> 启用）文件自动切换版本，只需要在 <code>~/.bashrc</code> 或 <code>~/.zshrc</code> 中添加以下内容，<code>--use-on-cd</code> 表示根据当前目录下的 <code>.nvmrc</code> 文件自动切换版本，<code>--version-file-strategy=recursive</code> 表示递归查找版本文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">eval</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>fnm <span class="token function">env</span> --use-on-cd --version-file-strategy<span class="token operator">=</span>recursive<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,53)),s("div",m,[n[12]||(n[12]=s("p",{class:"hint-container-title"},"提示",-1)),n[13]||(n[13]=s("p",null,[s("code",null,"fnm"),a(" 开箱即带许多功能。其中一些默认情况下不会激活，因为它们会改变 shell 的默认行为，还有一些只是功能标志，以避免破坏性更改，或者只是实验性的，直到我们认为值得引入它们为止。")],-1)),n[14]||(n[14]=s("p",null,[a("所有这些功能都可以通过在初始化 shell 时为 "),s("code",null,"fnm env"),a(" 调用添加标志来配置。例如，如果你的 shell 设置为 "),s("code",null,'eval "$(fnm env)"'),a("，那么你可以添加一个标志，将其更改为 "),s("code",null,'eval "$(fnm env --my-flag=value)"'),a("。")],-1)),s("p",null,[n[10]||(n[10]=a("详细可以查看配置文档：")),s("a",u,[n[9]||(n[9]=a("fnm 配置")),l(e)]),n[11]||(n[11]=a(" 实现更好的使用体验。"))])]),n[16]||(n[16]=t('<h3 id="命令对比" tabindex="-1"><a class="header-anchor" href="#命令对比"><span>命令对比</span></a></h3><p><code>fnm</code> 中的命令与 <code>nvm</code> 中的命令几乎完全相同，因此 <code>nvm</code> 用户可以根据需要更方便地切换到 <code>fnm</code>。</p><h2 id="对比" tabindex="-1"><a class="header-anchor" href="#对比"><span>对比</span></a></h2><h3 id="性能比较" tabindex="-1"><a class="header-anchor" href="#性能比较"><span>性能比较</span></a></h3><p>安装速度：由于采用 Rust 基础和多线程架构，<code>fnm</code> 的速度明显更快。 与 <code>nvm</code> 相比，安装时间通常更快。</p><p>内存使用：<code>fnm</code> 针对低内存使用率进行了优化，因此在高端和资源受限的系统上都很高效。</p><p>版本切换：在 <code>fnm</code> 中，版本切换是即时进行的。 相比之下，<code>nvm</code> 可能会出现轻微延迟，尤其是在切换大量使用的版本时。</p><h3 id="跨平台兼容性" tabindex="-1"><a class="header-anchor" href="#跨平台兼容性"><span>跨平台兼容性</span></a></h3><p><code>nvm</code>：主要为类 UNIX 系统设计。在 Windows 上，可以通过 WSL 或第三方工具（如 nvm-windows）使用。</p><p><code>fnm</code>：天然支持跨平台，包括 Windows、macOS 和 Linux，适合在不同操作系统上工作。</p><h3 id="社区和支持" tabindex="-1"><a class="header-anchor" href="#社区和支持"><span>社区和支持</span></a></h3><p><code>nvm</code>：用户群体庞大，文档丰富，社区资源充足，解决问题更为容易。</p><p><code>fnm</code>：虽然相对较新，但 <code>fnm</code> 的受欢迎度迅速上升，文档特别针对安装和使用做了详细的说明。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p><code>nvm</code> 和 <code>fnm</code> 都是管理 Node.js 版本的有效工具。虽然 <code>nvm</code> 是一个被广泛采用的选择，具有强大的社区支持，但 <code>fnm</code> 作为一种新兴的快速、轻量级替代方案，正在迅速崛起。对于需要跨平台兼容性和频繁版本切换的开发者来说，<code>fnm</code> 可能更适合，而偏好成熟工具和丰富文档支持的用户可以选择 <code>nvm</code>。</p>',15))])}const g=o(r,[["render",h],["__file","06-fnm-nvm.html.vue"]]),f=JSON.parse('{"path":"/frontend/engineering/basic/06-fnm-nvm.html","title":"fnm 和 nvm 对比","lang":"zh-CN","frontmatter":{"title":"fnm 和 nvm 对比","date":"2024-11-05T00:00:00.000Z","icon":"vs","category":["工程化"],"tag":["frontend","node","fnm","nvm","node package manager"],"description":"在管理多个 Node.js 项目（每个项目都可能需要不同的 Node 版本）时，可靠的版本管理器可以简化您的工作流程。 两种流行的选择是 fnm（Fast Node Manager） 和 nvm（Node Version Manager）。本文从性能、功能、安装简便性、使用和兼容性等方面对 fnm 和 nvm 进行了比较，帮助你选择最适合自己开发需求的...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/engineering/basic/06-fnm-nvm.html"}],["meta",{"property":"og:title","content":"fnm 和 nvm 对比"}],["meta",{"property":"og:description","content":"在管理多个 Node.js 项目（每个项目都可能需要不同的 Node 版本）时，可靠的版本管理器可以简化您的工作流程。 两种流行的选择是 fnm（Fast Node Manager） 和 nvm（Node Version Manager）。本文从性能、功能、安装简便性、使用和兼容性等方面对 fnm 和 nvm 进行了比较，帮助你选择最适合自己开发需求的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"fnm"}],["meta",{"property":"article:tag","content":"nvm"}],["meta",{"property":"article:tag","content":"node package manager"}],["meta",{"property":"article:published_time","content":"2024-11-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"fnm 和 nvm 对比\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 fnm 和 nvm 简介","slug":"fnm-和-nvm-简介","link":"#fnm-和-nvm-简介","children":[]},{"level":2,"title":"2 安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"2.1 nvm","slug":"nvm","link":"#nvm","children":[]},{"level":3,"title":"2.2 fnm","slug":"fnm","link":"#fnm","children":[{"level":4,"title":"2.2.1 ~/.bashrc：","slug":"bashrc","link":"#bashrc","children":[]},{"level":4,"title":"2.2.2 ~/.zshrc：","slug":"zshrc","link":"#zshrc","children":[]},{"level":4,"title":"2.2.3 PowerShell：","slug":"powershell","link":"#powershell","children":[]}]}]},{"level":2,"title":"3 使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"3.1 nvm","slug":"nvm-1","link":"#nvm-1","children":[{"level":4,"title":"3.1.1 安装 Node.js 版本","slug":"安装-node-js-版本","link":"#安装-node-js-版本","children":[]},{"level":4,"title":"3.1.2 切换 Node.js 版本","slug":"切换-node-js-版本","link":"#切换-node-js-版本","children":[]},{"level":4,"title":"3.1.3 设置默认 Node.js 版本","slug":"设置默认-node-js-版本","link":"#设置默认-node-js-版本","children":[]},{"level":4,"title":"3.1.4 列出所有已安装的 Node.js 版本","slug":"列出所有已安装的-node-js-版本","link":"#列出所有已安装的-node-js-版本","children":[]},{"level":4,"title":"3.1.5 自动切换版本","slug":"自动切换版本","link":"#自动切换版本","children":[]}]},{"level":3,"title":"3.2 fnm","slug":"fnm-1","link":"#fnm-1","children":[{"level":4,"title":"3.2.1 安装 Node.js 版本","slug":"安装-node-js-版本-1","link":"#安装-node-js-版本-1","children":[]},{"level":4,"title":"3.2.2 切换 Node.js 版本","slug":"切换-node-js-版本-1","link":"#切换-node-js-版本-1","children":[]},{"level":4,"title":"3.2.3 设置默认 Node.js 版本","slug":"设置默认-node-js-版本-1","link":"#设置默认-node-js-版本-1","children":[]},{"level":4,"title":"3.2.4 列出所有已安装的 Node.js 版本","slug":"列出所有已安装的-node-js-版本-1","link":"#列出所有已安装的-node-js-版本-1","children":[]},{"level":4,"title":"3.2.5 自动切换版本","slug":"自动切换版本-1","link":"#自动切换版本-1","children":[]}]},{"level":3,"title":"3.3 命令对比","slug":"命令对比","link":"#命令对比","children":[]}]},{"level":2,"title":"4 对比","slug":"对比","link":"#对比","children":[{"level":3,"title":"4.1 性能比较","slug":"性能比较","link":"#性能比较","children":[]},{"level":3,"title":"4.2 跨平台兼容性","slug":"跨平台兼容性","link":"#跨平台兼容性","children":[]},{"level":3,"title":"4.3 社区和支持","slug":"社区和支持","link":"#社区和支持","children":[]}]},{"level":2,"title":"5 总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1730805009000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":2}]},"readingTime":{"minutes":4.84,"words":1453},"filePathRelative":"frontend/engineering/basic/06-fnm-nvm.md","localizedDate":"2024年11月5日","excerpt":"","autoDesc":true}');export{g as comp,f as data};
