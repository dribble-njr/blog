import{_ as a,c as n,e as t,o as s}from"./app-BFkZJg83.js";const l={};function i(o,e){return s(),n("div",null,e[0]||(e[0]=[t(`<p><code>fnm</code> 会根据当前 Node 版本创建独立的模块目录，若频繁切换版本，则需要重新安装模块。</p><p>为了提高开发体验，我们可能需要全局共享模块，虽然这会在一定程度上造成版本冲突的可能性，但可以减少切换版本时重新安装模块的麻烦。</p><p><code>fnm</code> 设置全局共享模块步骤如下。</p><h2 id="macos" tabindex="-1"><a class="header-anchor" href="#macos"><span>macOS</span></a></h2><ol><li>创建全局共享模块目录<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/.npm_global
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>设置 <code>npm</code> 全局模块目录<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix ~/.npm_global
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>更新环境变量<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;export PATH=~/.npm_global/bin:\\<span class="token environment constant">$PATH</span>&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">source</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h2><ol><li>创建一个共享的全局模块目录：你可以在任意位置创建一个共享目录，比如 <code>C:\\fnm-global-modules</code>。<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> C:<span class="token punctuation">\\</span>fnm-global-modules
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>设置 <code>npm</code> 全局模块目录<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix C:<span class="token punctuation">\\</span>fnm-global-modules
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>更新环境变量 <ol><li>打开 系统环境变量设置（按 Win + X，选择 系统 &gt; 高级系统设置 &gt; 环境变量）。</li><li>在「系统变量和用户变量」部分找到 Path，点击 编辑。</li><li>添加新的路径：<code>C:\\fnm-global-modules\\</code>。</li></ol></li><li>重启终端使配置生效。</li></ol><p>配置完成后，通过 <code>npm install -g</code> 安装的全局模块会存储在 <code>~/.npm_global</code> 中，不再受 Node.js 版本切换的影响。</p>`,8)]))}const r=a(l,[["render",i],["__file","07-fnm-global-module-shared.html.vue"]]),c=JSON.parse('{"path":"/frontend/engineering/basic/07-fnm-global-module-shared.html","title":"fnm 全局共享模块","lang":"zh-CN","frontmatter":{"title":"fnm 全局共享模块","date":"2024-11-05T00:00:00.000Z","icon":"relation","category":["工程化"],"tag":["frontend","node","fnm","node package manager"],"description":"fnm 会根据当前 Node 版本创建独立的模块目录，若频繁切换版本，则需要重新安装模块。 为了提高开发体验，我们可能需要全局共享模块，虽然这会在一定程度上造成版本冲突的可能性，但可以减少切换版本时重新安装模块的麻烦。 fnm 设置全局共享模块步骤如下。 macOS 创建全局共享模块目录 设置 npm 全局模块目录 更新环境变量 Windows 创建一...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/engineering/basic/07-fnm-global-module-shared.html"}],["meta",{"property":"og:title","content":"fnm 全局共享模块"}],["meta",{"property":"og:description","content":"fnm 会根据当前 Node 版本创建独立的模块目录，若频繁切换版本，则需要重新安装模块。 为了提高开发体验，我们可能需要全局共享模块，虽然这会在一定程度上造成版本冲突的可能性，但可以减少切换版本时重新安装模块的麻烦。 fnm 设置全局共享模块步骤如下。 macOS 创建全局共享模块目录 设置 npm 全局模块目录 更新环境变量 Windows 创建一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-09T11:51:37.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"fnm"}],["meta",{"property":"article:tag","content":"node package manager"}],["meta",{"property":"article:published_time","content":"2024-11-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T11:51:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"fnm 全局共享模块\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-09T11:51:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 macOS","slug":"macos","link":"#macos","children":[]},{"level":2,"title":"2 Windows","slug":"windows","link":"#windows","children":[]}],"git":{"createdTime":1730805009000,"updatedTime":1731153097000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":3}]},"readingTime":{"minutes":1.17,"words":351},"filePathRelative":"frontend/engineering/basic/07-fnm-global-module-shared.md","localizedDate":"2024年11月5日","excerpt":"","autoDesc":true}');export{r as comp,c as data};
