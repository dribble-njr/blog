import{_ as t,c as a,e as r,o as i}from"./app-nKKmHBUX.js";const n={};function l(o,e){return i(),a("div",null,e[0]||(e[0]=[r('<p>对所有代码进行批判性思考，包括自己的代码。不断看到程序和设计的改进空间。</p><h2 id="听从蜥蜴脑" tabindex="-1"><a class="header-anchor" href="#听从蜥蜴脑"><span>听从蜥蜴脑</span></a></h2><p>一种有效的脑力突破的方法：</p><ol><li>在便签上写下「我正在做 xx」，然后贴在屏幕的一侧。</li><li>提醒自己，「xx」注定要出问题。提醒自己，「xx」即使没有出问题也会被扔掉。这样做没有坏处。</li><li>在空编辑器窗口中，写一条注释，用一句话描述你想学点什么或做点什么。</li><li>开始编码。</li></ol><p>如果在实验结束后仍旧不舒服，那就重新从散步、谈话和休息开始。</p><p>阅读别人的代码。</p><h2 id="重构" tabindex="-1"><a class="header-anchor" href="#重构"><span>重构</span></a></h2><p>重组现有代码实体、改变其内部结构而不改变其外部行为的规范式技术。</p><p>重构是一项日复一日的工作，需要采取低风险的小步骤进行，它更像是耙松和除草这类活动。这是一种有针对性的、精确的方法，有助于保持代码易于更改，而不是对代码库进行自由的、大规模的重写。</p><p>为了保证外部行为没有改变，你需要良好的自动化单元测试来验证代码的行为。</p><ul><li>尽早重构，尽快重构</li></ul><h2 id="注意安全" tabindex="-1"><a class="header-anchor" href="#注意安全"><span>注意安全</span></a></h2><ul><li>保持代码简洁，让攻击面更小</li><li>尽早打上安全补丁</li></ul>',13)]))}const c=t(n,[["render",l],["__file","07-when-coding.html.vue"]]),d=JSON.parse('{"path":"/reading/pragmatic-programmer/07-when-coding.html","title":"当你编码时","lang":"zh-CN","frontmatter":{"title":"当你编码时","date":"2024-08-07T00:00:00.000Z","icon":"code","category":["READING"],"tag":["pragmatic"],"description":"对所有代码进行批判性思考，包括自己的代码。不断看到程序和设计的改进空间。 听从蜥蜴脑 一种有效的脑力突破的方法： 在便签上写下「我正在做 xx」，然后贴在屏幕的一侧。 提醒自己，「xx」注定要出问题。提醒自己，「xx」即使没有出问题也会被扔掉。这样做没有坏处。 在空编辑器窗口中，写一条注释，用一句话描述你想学点什么或做点什么。 开始编码。 如果在实验结...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/reading/pragmatic-programmer/07-when-coding.html"}],["meta",{"property":"og:title","content":"当你编码时"}],["meta",{"property":"og:description","content":"对所有代码进行批判性思考，包括自己的代码。不断看到程序和设计的改进空间。 听从蜥蜴脑 一种有效的脑力突破的方法： 在便签上写下「我正在做 xx」，然后贴在屏幕的一侧。 提醒自己，「xx」注定要出问题。提醒自己，「xx」即使没有出问题也会被扔掉。这样做没有坏处。 在空编辑器窗口中，写一条注释，用一句话描述你想学点什么或做点什么。 开始编码。 如果在实验结..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-06T15:43:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"pragmatic"}],["meta",{"property":"article:published_time","content":"2024-08-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T15:43:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"当你编码时\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-06T15:43:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 听从蜥蜴脑","slug":"听从蜥蜴脑","link":"#听从蜥蜴脑","children":[]},{"level":2,"title":"2 重构","slug":"重构","link":"#重构","children":[]},{"level":2,"title":"3 注意安全","slug":"注意安全","link":"#注意安全","children":[]}],"git":{"createdTime":1723025244000,"updatedTime":1730907826000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":2}]},"readingTime":{"minutes":1.24,"words":371},"filePathRelative":"reading/pragmatic-programmer/07-when-coding.md","localizedDate":"2024年8月7日","excerpt":"","autoDesc":true}');export{c as comp,d as data};
