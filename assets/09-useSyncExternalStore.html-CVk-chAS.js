import{_ as o,c as p,e as c,a as s,d as a,b as e,r as l,o as i}from"./app-CMUwc0b2.js";const u={},r={href:"https://react.dev/reference/react/useSyncExternalStore",target:"_blank",rel:"noopener noreferrer"},d={href:"https://react.dev/reference/react-dom/server",target:"_blank",rel:"noopener noreferrer"};function k(v,n){const t=l("ExternalLinkIcon");return i(),p("div",null,[n[4]||(n[4]=c(`<p>不是所有的东西都是用 React 构建的。有很多库和平台 API 是外部于 React 的。将这些东西引入 React 的组件模型和状态管理生命周期是构建全功能应用程序的必要条件。</p><p>任务是同步外部世界与 React 组件的内部状态。为此，我们使用 <code>useSyncExternalStore</code> 钩子。</p><p>让我们以一个组件为例，该组件通过 geolocation API 显示您的当前位置。geolocation API 不是 React 的一部分，因此我们需要同步 geolocation API 的外部状态与组件的内部状态。</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useSyncExternalStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">LocationData</span> <span class="token operator">=</span>
	<span class="token operator">|</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&#39;unavailable&#39;</span><span class="token punctuation">;</span> geo<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">never</span> <span class="token punctuation">}</span>
	<span class="token operator">|</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&#39;available&#39;</span><span class="token punctuation">;</span> geo<span class="token operator">:</span> GeolocationPosition <span class="token punctuation">}</span>
<span class="token comment">// this variable is our external store!</span>
<span class="token keyword">let</span> location<span class="token operator">:</span> LocationData <span class="token operator">=</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&#39;unavailable&#39;</span> <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">subscribeToGeolocation</span><span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> watchId <span class="token operator">=</span> navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">watchPosition</span><span class="token punctuation">(</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		location <span class="token operator">=</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&#39;available&#39;</span><span class="token punctuation">,</span> geo<span class="token operator">:</span> position <span class="token punctuation">}</span>
		<span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		location <span class="token operator">=</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&#39;unavailable&#39;</span> <span class="token punctuation">}</span>
		<span class="token keyword">return</span> navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">clearWatch</span><span class="token punctuation">(</span>watchId<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getGeolocationSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> location
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">MyLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> location <span class="token operator">=</span> <span class="token function">useSyncExternalStore</span><span class="token punctuation">(</span>
		subscribeToGeolocation<span class="token punctuation">,</span>
		getGeolocationSnapshot<span class="token punctuation">,</span>
	<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token punctuation">{</span>location<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;unavailable&#39;</span> <span class="token operator">?</span> <span class="token punctuation">(</span>
				<span class="token string">&#39;Your location is unavailable&#39;</span>
			<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
					Your location is </span><span class="token punctuation">{</span>location<span class="token punctuation">.</span>geo<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>latitude<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
					</span><span class="token punctuation">{</span><span class="token string">&#39;°, &#39;</span><span class="token punctuation">}</span><span class="token plain-text">
					</span><span class="token punctuation">{</span>location<span class="token punctuation">.</span>geo<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>longitude<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
					</span><span class="token punctuation">{</span><span class="token string">&#39;°&#39;</span><span class="token punctuation">}</span><span class="token plain-text">
				</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基本 API 如下：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">const</span> snapshot <span class="token operator">=</span> <span class="token function">useSyncExternalStore</span><span class="token punctuation">(</span>
	subscribe<span class="token punctuation">,</span>
	getSnapshot<span class="token punctuation">,</span>
	getServerSnapshot<span class="token punctuation">,</span> <span class="token comment">// optional</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>subscribe</code> 是一个函数，它接受一个回调函数并返回一个清理函数。每当外部存储发生变化时，回调函数都会被调用，让 React 知道应该调用 <code>getSnapshot</code> 来获取新值。</li><li><code>getSnapshot</code> 是一个函数，它返回外部存储的当前值。</li><li><code>getServerSnapshot</code> 是一个可选函数，它从服务器返回外部存储的当前值。这对于服务器端渲染和重新水合很有用。如果您不提供此函数，则 React 将在服务器上渲染最近的 <code>Suspense</code> 边界 <code>fallback</code>，然后当客户端水合时，它将调用 <code>getSnapshot</code> 来获取当前值。</li></ul><p>参考文档：</p>`,8)),s("ul",null,[s("li",null,[s("a",r,[n[0]||(n[0]=a("📜 ",-1)),n[1]||(n[1]=s("code",null,"useSyncExternalStore",-1)),n[2]||(n[2]=a(" docs",-1)),e(t)])]),s("li",null,[s("a",d,[n[3]||(n[3]=a("📜 SSR docs",-1)),e(t)])])])])}const b=o(u,[["render",k],["__file","09-useSyncExternalStore.html.vue"]]),g=JSON.parse('{"path":"/frontend/framework/react/09-useSyncExternalStore.html","title":"useSyncExternalStore","lang":"zh-CN","frontmatter":{"title":"useSyncExternalStore","date":"2025-08-05T00:00:00.000Z","tags":["react","hooks"],"description":"不是所有的东西都是用 React 构建的。有很多库和平台 API 是外部于 React 的。将这些东西引入 React 的组件模型和状态管理生命周期是构建全功能应用程序的必要条件。 任务是同步外部世界与 React 组件的内部状态。为此，我们使用 useSyncExternalStore 钩子。 让我们以一个组件为例，该组件通过 geolocation...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/framework/react/09-useSyncExternalStore.html"}],["meta",{"property":"og:title","content":"useSyncExternalStore"}],["meta",{"property":"og:description","content":"不是所有的东西都是用 React 构建的。有很多库和平台 API 是外部于 React 的。将这些东西引入 React 的组件模型和状态管理生命周期是构建全功能应用程序的必要条件。 任务是同步外部世界与 React 组件的内部状态。为此，我们使用 useSyncExternalStore 钩子。 让我们以一个组件为例，该组件通过 geolocation..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-15T08:49:38.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"hooks"}],["meta",{"property":"article:published_time","content":"2025-08-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-15T08:49:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"useSyncExternalStore\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-15T08:49:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[],"git":{"createdTime":1755247778000,"updatedTime":1755247778000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":1}]},"readingTime":{"minutes":1.42,"words":425},"filePathRelative":"frontend/framework/react/09-useSyncExternalStore.md","localizedDate":"2025年8月5日","excerpt":"","autoDesc":true}');export{b as comp,g as data};
