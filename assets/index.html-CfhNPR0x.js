import{_ as o,c as l,a as e,e as i,d as a,b as s,r as p,o as r}from"./app-nKKmHBUX.js";const d={},u={href:"https://reactnative.dev/",target:"_blank",rel:"noopener noreferrer"},c={href:"https://expo.dev/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://expo.dev/go",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/expo/expo-github-action",target:"_blank",rel:"noopener noreferrer"},b={class:"hint-container tip"},g={href:"https://github.com/expo/expo-github-action/tree/main/preview#create-previews-on-pull-requests",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/dribble-njr/imperial-kitchen",target:"_blank",rel:"noopener noreferrer"},h={href:"https://callstack.github.io/react-native-paper/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://oblador.github.io/react-native-vector-icons/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/gorhom/react-native-bottom-sheet",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/react-native-svg/react-native-svg",target:"_blank",rel:"noopener noreferrer"},E={href:"https://formik.org/docs/overview",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/jquense/yup",target:"_blank",rel:"noopener noreferrer"};function w(C,n){const t=p("ExternalLinkIcon");return r(),l("div",null,[e("p",null,[n[2]||(n[2]=a("随着移动开发的需求日益增长，跨平台开发框架成为开发者的首选。其中，")),e("a",u,[n[0]||(n[0]=a("React Native")),s(t)]),n[3]||(n[3]=a(" 和 ")),e("a",c,[n[1]||(n[1]=a("Expo")),s(t)]),n[4]||(n[4]=a(" 是两种备受关注的技术路线。这篇文章将从 React Native 的基础出发，探讨 Expo 的优势，并介绍如何搭建 Expo 项目、CI/CD 流程及开发体验。"))]),n[31]||(n[31]=i('<hr><h2 id="为什么选择-expo-而不是纯-react-native" tabindex="-1"><a class="header-anchor" href="#为什么选择-expo-而不是纯-react-native"><span>为什么选择 Expo 而不是纯 React Native？</span></a></h2><p>React Native 是一个基于 JavaScript 的开源框架，支持使用一套代码构建 iOS 和 Android 应用。Expo 则是围绕 React Native 构建的一套工具和服务，提供了一种更简便的开发体验。</p><h3 id="核心对比" tabindex="-1"><a class="header-anchor" href="#核心对比"><span>核心对比</span></a></h3><table><thead><tr><th>特性</th><th>React Native CLI</th><th>Expo</th></tr></thead><tbody><tr><td>学习曲线</td><td>较陡，需要配置 Xcode 或 Android Studio</td><td>平缓，使用 Expo Go 即可快速启动</td></tr><tr><td>项目启动速度</td><td>慢，需要较多依赖安装</td><td>快，仅需 Node.js 和手机或模拟器</td></tr><tr><td>社区支持和扩展性</td><td>强，自由配置</td><td>强，但受限于 Expo 生态</td></tr><tr><td>构建和打包</td><td>手动配置</td><td>提供托管的打包服务</td></tr><tr><td>原生模块支持</td><td>灵活，但需要手动集成</td><td>有限，但支持 EAS (Expo Application Services) 解决方案</td></tr></tbody></table><h3 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景"><span>适用场景</span></a></h3><ul><li><strong>React Native CLI</strong>：适合有移动开发经验或对原生模块有较高定制化需求的开发者。</li><li><strong>Expo</strong>：更适合快速构建 MVP（Minimum Viable Product）或移动开发新手。</li></ul><h2 id="如何搭建一个-expo-项目" tabindex="-1"><a class="header-anchor" href="#如何搭建一个-expo-项目"><span>如何搭建一个 Expo 项目</span></a></h2><p>Expo 的上手非常简单，只需几步即可构建一个跨平台应用。</p><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h3>',10)),e("ol",null,[n[8]||(n[8]=i(`<li>安装最新版本的 Node.js。</li><li>安装 Expo CLI：<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> expo-cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,2)),e("li",null,[n[6]||(n[6]=a("确保设备上安装了 ")),e("a",v,[n[5]||(n[5]=a("Expo Go")),s(t)]),n[7]||(n[7]=a("。"))])]),n[32]||(n[32]=i(`<h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3><p>使用以下命令快速创建一个 Expo 项目：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>npx create-expo-app@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>可以使用 <code>--template</code> 参数选择模板。</p></div><p>创建项目后，进入项目目录并启动开发服务器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> my-app
expo start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，你可以通过 Expo Go 扫描 QR 码或使用模拟器查看应用效果。</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124160026.png" alt="调试二维码" tabindex="0" loading="lazy"><figcaption>调试二维码</figcaption></figure><h2 id="ci-cd-流程" tabindex="-1"><a class="header-anchor" href="#ci-cd-流程"><span>CI/CD 流程</span></a></h2><p>Expo 提供了托管服务 EAS，用于自动化构建、部署和发布。</p><h3 id="配置-eas-cli" tabindex="-1"><a class="header-anchor" href="#配置-eas-cli"><span>配置 EAS CLI</span></a></h3><ol><li>安装 EAS CLI：<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> eas-cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>初始化 EAS：<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>eas init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>这会生成一个 <code>eas.json</code> 文件，用于配置构建流程。</li></ol><div class="hint-container note"><p class="hint-container-title">注</p><p>如果你是 monorepo 项目，需要在 expo 项目目录下使用 <code>eas-cli</code> 来初始化 EAS。</p></div><h3 id="配置构建" tabindex="-1"><a class="header-anchor" href="#配置构建"><span>配置构建</span></a></h3><p>在 <code>eas.json</code> 中添加构建配置，例如：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;production&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;ios&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;distribution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app-store&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;android&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;buildType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;apk&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行构建" tabindex="-1"><a class="header-anchor" href="#运行构建"><span>运行构建</span></a></h3><p>构建 iOS 和 Android 应用：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>eas build <span class="token parameter variable">--platform</span> all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完成后，你会收到构建链接，可以下载或分发应用。</p><p>可以在官网 dashboard 中查看构建进度。</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124164823.png" alt="构建进度" tabindex="0" loading="lazy"><figcaption>构建进度</figcaption></figure><h3 id="配置-github-ci-cd" tabindex="-1"><a class="header-anchor" href="#配置-github-ci-cd"><span>配置 GitHub CI/CD</span></a></h3>`,23)),e("p",null,[n[10]||(n[10]=a("expo 提供了 ")),e("a",m,[n[9]||(n[9]=a("expo-github-action")),s(t)]),n[11]||(n[11]=a(" 来配置 GitHub CI/CD。"))]),e("div",b,[n[15]||(n[15]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[n[13]||(n[13]=a("更多配置请参考 ")),e("a",g,[n[12]||(n[12]=a("expo-github-action")),s(t)]),n[14]||(n[14]=a("。"))])]),n[33]||(n[33]=e("p",null,"需要在 expo.dev 中生成一个 token，并配置到 GitHub 仓库的 secrets 中。",-1)),n[34]||(n[34]=e("figure",null,[e("img",{src:"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124170920.png",alt:"expo token",tabindex:"0",loading:"lazy"}),e("figcaption",null,"expo token")],-1)),e("p",null,[n[17]||(n[17]=a("下面是个人项目 ")),e("a",k,[n[16]||(n[16]=a("imperial-kitchen")),s(t)]),n[18]||(n[18]=a(" 中的部分配置，仅供参考。"))]),n[35]||(n[35]=i(`<div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> PR Preview

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">pull_request</span><span class="token punctuation">:</span>
    <span class="token key atrule">types</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>opened<span class="token punctuation">,</span> synchronize<span class="token punctuation">,</span> reopened<span class="token punctuation">]</span>

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">eas-preview</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest

    <span class="token key atrule">permissions</span><span class="token punctuation">:</span>
      <span class="token key atrule">pull-requests</span><span class="token punctuation">:</span> write

    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v4

      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v4
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> 20.10.0
          <span class="token key atrule">cache</span><span class="token punctuation">:</span> yarn

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Expo and EAS
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> expo/expo<span class="token punctuation">-</span>github<span class="token punctuation">-</span>action@v8
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">eas-version</span><span class="token punctuation">:</span> latest
          <span class="token key atrule">token</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.EXPO_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies
        <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn install

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Change env
        <span class="token key atrule">working-directory</span><span class="token punctuation">:</span> ./apps/mobile
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          EXPO_PUBLIC_BASE_URL=http://\${{ secrets.TEST_DEPLOY_HOST }}:\${{ secrets.TEST_DEPLOY_PORT }}
          echo $EXPO_PUBLIC_BASE_URL
          echo &quot;EXPO_PUBLIC_BASE_URL=$EXPO_PUBLIC_BASE_URL&quot; &gt;&gt; .env</span>

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Trigger EAS Preview
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> expo/expo<span class="token punctuation">-</span>github<span class="token punctuation">-</span>action/preview@v8
        <span class="token key atrule">id</span><span class="token punctuation">:</span> preview
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">working-directory</span><span class="token punctuation">:</span> ./apps/mobile
          <span class="token key atrule">command</span><span class="token punctuation">:</span> eas update <span class="token punctuation">-</span><span class="token punctuation">-</span>auto <span class="token punctuation">-</span><span class="token punctuation">-</span>branch $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.pull_request.head.ref <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当每次 PR 时，会自动触发构建，并生成预览链接，可以使用 Expo Go 扫描二维码查看。</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124165038.png" alt="expo-update" tabindex="0" loading="lazy"><figcaption>expo-update</figcaption></figure><p>也可在 Expo go 中登录账号，直接查看对应项目的所有更新。</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/2025.01.24_16.53.07.jpg" alt="expo go 查看更新" tabindex="0" loading="lazy"><figcaption>expo go 查看更新</figcaption></figure><h2 id="开发体验" tabindex="-1"><a class="header-anchor" href="#开发体验"><span>开发体验</span></a></h2><p>Expo 不仅降低了入门门槛，还提供了一些提升开发效率的工具：</p><ol><li><strong>实时刷新（Fast Refresh）</strong>：代码修改后，应用会即时更新。</li><li><strong>丰富的 API 支持</strong>：内置摄像头、位置、推送通知等常用功能。</li><li><strong>跨平台统一性</strong>：一次编码，运行在 iOS 和 Android。</li><li><strong>调试工具</strong>：支持使用 Chrome DevTools 或 VSCode 进行调试。</li><li><strong>EAS 构建</strong>：支持自动构建和发布，方便管理。</li></ol><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ul><li><strong>依赖管理</strong>：某些原生模块需要 <code>eject</code>（脱离）到裸工作流。</li><li><strong>性能优化</strong>：对于复杂 UI 和高性能需求，可能需要优化图像处理和动画。</li></ul><h3 id="推荐库" tabindex="-1"><a class="header-anchor" href="#推荐库"><span>推荐库</span></a></h3>`,11)),e("ul",null,[e("li",null,[e("a",h,[n[19]||(n[19]=a("react-native-paper")),s(t)]),n[20]||(n[20]=a("：基于 Material Design 的跨平台 UI 组件库。"))]),e("li",null,[e("a",x,[n[21]||(n[21]=a("react-native-vector-icons")),s(t)]),n[22]||(n[22]=a("：icon 库"))]),e("li",null,[e("a",y,[n[23]||(n[23]=a("react-native-bottom-sheet")),s(t)]),n[24]||(n[24]=a("：功能强大的底部弹窗组件"))]),e("li",null,[e("a",f,[n[25]||(n[25]=a("react-native-svg")),s(t)]),n[26]||(n[26]=a("：集成 SVG 图标"))]),e("li",null,[e("a",E,[n[27]||(n[27]=a("formik")),s(t)]),n[28]||(n[28]=a("：表单管理库"))]),e("li",null,[e("a",j,[n[29]||(n[29]=a("yup")),s(t)]),n[30]||(n[30]=a("：数据验证库"))])]),n[36]||(n[36]=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结"},[e("span",null,"总结")])],-1)),n[37]||(n[37]=e("p",null,"Expo 通过降低技术门槛和提供完善的工具链，使跨平台开发变得更加轻松。对于需要快速实现 MVP 或缺乏移动开发经验的开发者，Expo 是一个理想选择。",-1)),n[38]||(n[38]=e("p",null,"如果你正计划开发一个跨平台应用，不妨试试 Expo，享受快速启动、强大功能和简化的开发体验！",-1))])}const N=o(d,[["render",w],["__file","index.html.vue"]]),S=JSON.parse('{"path":"/frontend/framework/expo/","title":"从 React Native 到 Expo：快速实现跨平台开发","lang":"zh-CN","frontmatter":{"title":"从 React Native 到 Expo：快速实现跨平台开发","date":"2025-01-24T00:00:00.000Z","category":["expo"],"tag":["expo","full stack","react native","mobile"],"description":"随着移动开发的需求日益增长，跨平台开发框架成为开发者的首选。其中，React Native 和 Expo 是两种备受关注的技术路线。这篇文章将从 React Native 的基础出发，探讨 Expo 的优势，并介绍如何搭建 Expo 项目、CI/CD 流程及开发体验。 为什么选择 Expo 而不是纯 React Native？ React Native...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/framework/expo/"}],["meta",{"property":"og:title","content":"从 React Native 到 Expo：快速实现跨平台开发"}],["meta",{"property":"og:description","content":"随着移动开发的需求日益增长，跨平台开发框架成为开发者的首选。其中，React Native 和 Expo 是两种备受关注的技术路线。这篇文章将从 React Native 的基础出发，探讨 Expo 的优势，并介绍如何搭建 Expo 项目、CI/CD 流程及开发体验。 为什么选择 Expo 而不是纯 React Native？ React Native..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124160026.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-24T09:10:50.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"从 React Native 到 Expo：快速实现跨平台开发"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"expo"}],["meta",{"property":"article:tag","content":"full stack"}],["meta",{"property":"article:tag","content":"react native"}],["meta",{"property":"article:tag","content":"mobile"}],["meta",{"property":"article:published_time","content":"2025-01-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-24T09:10:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"从 React Native 到 Expo：快速实现跨平台开发\\",\\"image\\":[\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124160026.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124164823.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124170920.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20250124165038.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/2025.01.24_16.53.07.jpg\\"],\\"datePublished\\":\\"2025-01-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-24T09:10:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 为什么选择 Expo 而不是纯 React Native？","slug":"为什么选择-expo-而不是纯-react-native","link":"#为什么选择-expo-而不是纯-react-native","children":[{"level":3,"title":"1.1 核心对比","slug":"核心对比","link":"#核心对比","children":[]},{"level":3,"title":"1.2 适用场景","slug":"适用场景","link":"#适用场景","children":[]}]},{"level":2,"title":"2 如何搭建一个 Expo 项目","slug":"如何搭建一个-expo-项目","link":"#如何搭建一个-expo-项目","children":[{"level":3,"title":"2.1 环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"2.2 创建项目","slug":"创建项目","link":"#创建项目","children":[]}]},{"level":2,"title":"3 CI/CD 流程","slug":"ci-cd-流程","link":"#ci-cd-流程","children":[{"level":3,"title":"3.1 配置 EAS CLI","slug":"配置-eas-cli","link":"#配置-eas-cli","children":[]},{"level":3,"title":"3.2 配置构建","slug":"配置构建","link":"#配置构建","children":[]},{"level":3,"title":"3.3 运行构建","slug":"运行构建","link":"#运行构建","children":[]},{"level":3,"title":"3.4 配置 GitHub CI/CD","slug":"配置-github-ci-cd","link":"#配置-github-ci-cd","children":[]}]},{"level":2,"title":"4 开发体验","slug":"开发体验","link":"#开发体验","children":[{"level":3,"title":"4.1 注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":3,"title":"4.2 推荐库","slug":"推荐库","link":"#推荐库","children":[]}]},{"level":2,"title":"5 总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1737709850000,"updatedTime":1737709850000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":1}]},"readingTime":{"minutes":4.37,"words":1312},"filePathRelative":"frontend/framework/expo/README.md","localizedDate":"2025年1月24日","excerpt":"","autoDesc":true}');export{N as comp,S as data};
